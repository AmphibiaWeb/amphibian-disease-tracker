var adminApiTarget,apiTarget,createChart,createOverflowMenu,customBarTooltip,customBarTooltip2,dropdownSortEvents,fetchMiniTaxonBlurb,fetchMiniTaxonBlurbs,getRandomDataColor,getServerChart,popShowRangeMap,renderNewChart,indexOf=[].indexOf||function(e){for(var t=0,a=this.length;t<a;t++)if(t in this&&this[t]===e)return t;return-1};apiTarget=uri.urlString+"api.php",adminApiTarget=uri.urlString+"admin-api.php",window._adp={taxonCharts:{}};try{(createOverflowMenu=function(){return checkLoggedIn(function(e){var t,a;return t=e.status?'    <paper-item data-href="'+uri.urlString+'admin" class="click">\n  <iron-icon icon="icons:settings-applications"></iron-icon>\n  Account Settings\n</paper-item>\n<paper-item data-href="'+uri.urlString+'admin-login.php?q=logout" class="click">\n  <span class="glyphicon glyphicon-log-out"></span>\n  Log Out\n</paper-item>':"",a='<paper-menu-button id="header-overflow-menu" vertical-align="bottom" horizontal-offset="-15" horizontal-align="right" vertical-offset="30">\n  <paper-icon-button icon="icons:more-vert" class="dropdown-trigger"></paper-icon-button>\n  <paper-menu class="dropdown-content">\n    '+t+'\n    <paper-item data-href="'+uri.urlString+'dashboard.php" class="click">\n      Data Dashboard\n    </paper-item>\n    <paper-item data-href="https://amphibian-disease-tracker.readthedocs.org" class="click">\n      <iron-icon icon="icons:chrome-reader-mode"></iron-icon>\n      Documentation\n    </paper-item>\n    <paper-item data-href="https://github.com/AmphibiaWeb/amphibian-disease-tracker" class="click">\n      <iron-icon icon="glyphicon-social:github"></iron-icon>\n      Github\n    </paper-item>\n    <paper-item data-href="'+uri.urlString+'about.php" class="click">\n      About / Legal\n    </paper-item>\n  </paper-menu>\n</paper-menu-button>',$("#header-overflow-menu").remove(),$("header#header-bar .logo-container + p").append(a),isNull(t)||$("header#header-bar paper-icon-button[icon='icons:settings-applications']").remove(),bindClicks()}),!1})()}catch(e){}createChart=function(e,t,a,n,o){var r,s,l,i,c,d,p,u,h,g;if(null==a&&(a=!1),null==n&&(n="main"),"object"!=typeof t)return console.error("Can't create a chart without a data object"),!1;if("function"==typeof a&&isNull(o)&&(o=a,a=!1),u={label:"Sample Data",data:[65,59,80,81,56,55,40],borderWidth:1,borderColor:["rgba(255,99,132,1)","rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)","rgba(75, 192, 192, 1)","rgba(153, 102, 255, 1)","rgba(255, 159, 64, 1)"],backgroundColor:["rgba(255, 99, 132, 0.2)","rgba(54, 162, 235, 0.2)","rgba(255, 206, 86, 0.2)","rgba(75, 192, 192, 0.2)","rgba(153, 102, 255, 0.2)","rgba(255, 159, 64, 0.2)"]},g=[u],h={labels:["January","February","March","April","May","June","July"],datasets:g},isNull(t.data)&&(c=t,console.warn("No data for chart, will use sample data",c)),null==t.data&&(t.data=h),null==t.type&&(t.type="bar"),"object"!=typeof t.options&&(t.options={responsive:!0,scales:{yAxes:[{ticks:{beginAtZero:!0}}]}}),$(e).exists())console.log("Canvas already exists:",e);else{console.log("Creating new canvas"),i="#"===e.slice(0,1)?e.slice(1):"dataChart-"+$("canvas").length,(r=document.createElement("canvas")).setAttribute("class","chart dynamic-chart col-xs-12"),r.setAttribute("id",i);try{_adp.newCanvas=r}catch(e){}document.querySelector(n).appendChild(r)}if(null!=(null!=(d=_adp.chart)?d.chart:void 0)&&_adp.chart.chart.destroy(),l=$(e),isNull(l))try{console.log("trying again to make context"),l=$(r)}catch(e){}try{"object"!=typeof(null!=(p=t.options)?p.customCallbacks:void 0)&&(t.options.customCallbacks={})}catch(e){}return s=new Chart(l,t),_adp.chart={chart:s,ctx:l},console.info("Chart created with",t),"function"==typeof o&&o(),s},getRandomDataColor=function(){var e;return e="rgba("+randomInt(0,255)+","+randomInt(0,255)+","+randomInt(0,255),{border:e+",1)",background:e+",0.2)"}},getServerChart=function(e,t){var a,n,o,r,s;null==e&&(e="location"),startLoad();try{$("#post-species-summary").remove()}catch(e){}if(a="action=chart&bin="+e,"object"==typeof t){n=[];for(o in t)r=t[o],n.push(o+"="+r);a+="&"+n.join("&")}try{$("#diseasetested-select").exists()&&(s=p$("#diseasetested-select").selectedItem.name,isNull(s)||(a+="&disease="+s))}catch(e){}return console.debug("Fetching chart with",apiTarget+"?"+a),$.post(apiTarget,a,"json").done(function(n){var o,r,s,l,i,c,d,p,u,h,g;if(!1===n.status)return console.error("Server had a problem fetching chart data - "+n.human_error),console.warn(n),stopLoadError(n.human_error),!1;for(console.debug("Fetched chart",n),o=n.data,l=Object.toArray(o.datasets),i=0,c=0,d=l.length;c<d;c++){if(s=l[c],s.data=Object.toArray(s.data),console.log("examine data",s),null==s.borderWidth&&(s.borderWidth=1),null==s.backgroundColor)for(s.borderColor=[],s.backgroundColor=[],0,u=0,p=(g=s.data).length;u<p;u++)g[u],"PosNeg"===s.stack?(-1!==s.label.toLowerCase().search("positive")&&(r={border:"rgba(220,30,25,1)",background:"rgba(220,30,25,0.2)"}),-1!==s.label.toLowerCase().search("negative")&&(r={border:"rgba(25,70,220,1)",background:"rgba(25,70,220,0.2)"})):"totals"===s.stack?-1!==s.label.toLowerCase().search("total")&&(r={border:"rgba(25,200,90,1)",background:"rgba(25,200,90,0.2)"}):r=getRandomDataColor(),s.borderColor.push(r.border),s.backgroundColor.push(r.background),0;l[i]=s,++i}switch(n.use_preprocessor){case"geocoder":console.log("Got results",n),h=function(e){var t,a,n,r,c,d,p,u,h,g,b,m,f,y,v,w,x,C,$,k,_,S,A,F;for(console.log("Starting geocoder preprocessor",l),a=0,g=[],r=[],c={},i=0,F=!1,_=[],y=0,b=l.length;y<b;y++){for(d=l[y],s=d.data,console.log("Data blob",s),F||(!1,n=i,u=0,h=0),p=0,v=0,m=s.length;v<m;v++){if(C=s[v],++p,!isNull(C.points)){for(console.debug("Using pointset",C),t={points:[],title:A=C.title,project:$=C.project_id},a=0,console.log("Looking at project #"+$+", '"+A+"'"),w=0,f=(k=Object.toArray(C.points)).length;w<f;w++){x=k[w];try{S=canonicalizePoint(x),t.points.push(S),a++}catch(e){}}if(0===a){console.log("Skipping project #"+$+" = '"+A+"' with no points");continue}u++,80,localityFromMapBuilder(t,function(t,a){var s,p,b,m,f,y,v;h++;try{for(m=0,b=(v=null!=(f=a.views)?f:geo.geocoderViews).length;m<b;m++)y=v[m],indexOf.call(y.types,"country")<0||(p=y.formatted_address)}catch(e){p="Multiple Countries"}if(isNull(p)&&(p=t),console.log("Final locality '"+p+"' for "+a.title),indexOf.call(g,p)<0?(g.push(p),c[p]=r.length,r.push(1)):(s=c[p],r[s]++),h===u&&(d.data=r,l[n]=d,h=0,u=0,F=!1,i===l.length))return o.labels=g,e()})}p===s.length&&(!0,F=!0)}_.push(++i)}return _};break;default:h=function(e){return e()}}return h(function(){var r,i,c,d,p,u,h,g,b,m,f,y,v,w,x;if(r={labels:Object.toArray(o.labels),datasets:l},i={data:r,type:null!=(p=o.type)?p:"bar"},isNull(o.stacking))try{null==i.options&&(i.options={scales:{xAxes:[{scaleLabel:{}}],yAxes:[{scaleLabel:{}}]}}),null!=n.title&&(i.options.title={display:!0,text:n.title}),null!=(u=i.options)&&null!=(h=u.scales)&&null!=(g=h.xAxes)&&null!=(b=g[0])&&(b.scaleLabel={labelString:n.axes.x,display:!0}),null!=(m=i.options)&&null!=(f=m.scales)&&null!=(y=f.yAxes)&&null!=(v=y[0])&&(v.scaleLabel={labelString:n.axes.y,display:!0})}catch(e){d=e,console.warn("Couldn't set up redundant options - "+d.message),console.warn(d.stack)}else i.options={scales:{xAxes:[{scaleLabel:{labelString:n.axes.x,display:!0},stacked:o.stacking.x}],yAxes:[{scaleLabel:{labelString:n.axes.y,display:!0},stacked:o.stacking.y}]}},null!=n.title&&(i.options.title={display:!0,text:n.title});try{i.options.tooltips={callbacks:{afterLabel:function(e,t){return"Click to view the taxon breakdown"}}}}catch(e){d=e,console.error("Couldn't custom label tooltips! "+d.message),console.warn(d.stack)}try{w=r.labels.join(","+JSON.stringify(r.datasets))}catch(e){try{w=r.labels.join(",")}catch(e){w="BAD_STRINGIFY"}}return x=md5(w),c="#dataChart-"+l[0].label.replace(/ /g,"-")+"-"+x,console.log("Creating chart with",c,i),createChart(c,i,function(){var d,p,u,h,g,b,m,f,y,v,w,C;if(isNull(n.full_description)||$("#chart-"+l[0].label.replace(" ","-")).before("<h3 class='col-xs-12 text-center chart-title'>"+n.full_description+"</h3>"),"species"===e){for(h={},p="",y=0,b=(v=r.labels).length;y<b;y++)d=v[y],isNull(d)||(p+='<div class="col-xs-12 col-md-6 col-lg-4">\n  <button type="button" class="btn btn-default collapse-trigger" data-target="#'+(C=md5(d+"-"+Date.now()))+'" id="'+C+'-button-trigger" data-taxon="'+d+'">\n  '+d+'\n  </button>\n  <iron-collapse id="'+C+'" data-bin="'+t.sort+'" data-taxon="'+d+'" class="taxon-collapse">\n    <div class="collapse-content alert">\n      Binned data for '+d+". Should populate this asynchronously ....\n    </div>\n  </iron-collapse>\n</div>",h[C]=d);"species"===t.sort?w=(f=m="species")+" Summaries":(m="genera",f="genus",w="Species Summaries by Genus"),g='<section id="post-species-summary" class="col-xs-12" style="margin-top:2rem;">\n  <div class="row">\n    <a href="'+(u=_adp.chart.chart.toBase64Image())+'" class="btn btn-primary pull-right col-xs-8 col-sm-4 col-md-3 col-lg-2" id="download-main-chart" download disabled>\n      <iron-icon icon="icons:cloud-download"></iron-icon>\n      Download Chart\n    </a>\n  </div>\n  <p hidden>\n    These data are generated from over '+n.rows+" "+m+". AND MORE SUMMARY BLAHDEYBLAH. Per "+f+' summary links, etc.\n  </p>\n  <div class="row">\n    <h3 class="capitalize col-xs-12">'+w+' <small class="text-muted">Ordered as the above chart</small></h3>\n    <p class="col-xs-12 text-muted">Click on a taxon to toggle charts and more data for that taxon</p>\n    '+p+"\n  </div>\n</section>";try{$("#post-species-summary").remove()}catch(e){}$(c).after(g),delay(750,function(){return u=_adp.chart.chart.toBase64Image(),$("#download-main-chart").attr("href",u).removeAttr("disabled")});try{bindCollapsors(),_adp.fetchUpdatesFor=h,delay(250,function(){return fetchMiniTaxonBlurbs()})}catch(e){}return _adp.chart.ctx.click(function(e){var t,a,n,o,r;return a=_adp.chart.chart.getDatasetAtEvent(e),o=_adp.chart.chart.getElementAtEvent(e),console.debug("Dataset",a),console.debug("Element",o),n=o[0]._index,s=a[n],console.debug("Specific data:",s),r=s._model.label,console.debug("Taxon clicked:",r),getRandomDataColor(),t="button[data-taxon='"+r+"']",console.debug("Selector test",t,$(t).exists()),$(".success-glow").removeClass("success-glow"),$(t).addClass("success-glow").get(0).scrollIntoView(!1)})}if("location"===e)return _adp.chart.ctx.click(function(e){var t,n,r,l;return n=_adp.chart.chart.getDatasetAtEvent(e),l=_adp.chart.chart.getElementAtEvent(e),console.debug("Dataset",n),console.debug("Element",l),r=l[0]._index,s=n[r],console.debug("Specific data:",s),t=s._model.label,console.debug("country clicked:",t),a={async:!0,action:"country_taxon",country:t},$.get("dashboard.php",buildQuery(a,"json")).done(function(e){var a,n,r,s,l,d,p;if(console.debug("Got country result",e),e.status){console.log("Should build out new chart here"),i={type:"bar",options:{responsive:!0,title:{display:!0,text:"Taxa in "+t},scales:{xAxes:[{scaleLabel:{labelString:"Taxa",display:!0}}],yAxes:[{scaleLabel:{labelString:"Sample Count",display:!0},stacked:!0}]}}},s={label:"Positive Samples",data:[],borderColor:"rgba(220,30,25,1)",backgroundColor:"rgba(220,30,25,0.3)",borderWidth:1,stack:"pnSamples"},r={label:"Negative Samples",data:[],borderColor:"rgba(25,70,220,1)",backgroundColor:"rgba(25,70,220,0.3)",borderWidth:1,stack:"pnSamples"},n=[],l=e.data;for(d in l)p=l[d],r.data.push(toInt(p.false)),s.data.push(toInt(p.true)),n.push(d);o={labels:n,datasets:[s,r]},i.data=o,console.log("Using chart data",i),x=JSON.stringify(o),c="#locale-zoom-chart",a=$(c),$(c).attr("data-uid",x),null!=_adp.zoomChart&&_adp.zoomChart.destroy(),_adp.zoomChart=new Chart(a,i)}return!1}),!1})}),stopLoad()}),!1}).fail(function(e,t){return console.error("AJAX error",e,t),stopLoadError("There was a problem communicating with the server"),!1}),!1},customBarTooltip=function(e){var t,a;t=$("#chartjs-tooltip");{if(e)return a=t.html(),console.debug("Got tooltip HTML:",a),a+="<br/><br/>Click to view the taxon breakdown",t.html(a);t.css("opacity",0)}},customBarTooltip2=function(e,t){return console.debug("Data object we're working with:",t.datasets[e.datasetIndex]),[t.datasets[e.datasetIndex].label,"","Click to view the taxon breakdown"]},fetchMiniTaxonBlurbs=function(e){var t,a,n,o,r,s;null==e&&(e=_adp.fetchUpdatesFor),console.debug("Binding / setting up taxa updates for",e),_adp.collapseOpener=function(e){if(e.opened){if(Date.now()-_adp.lastOpened<1e3)return!1;e.hide()}else _adp.lastOpened=Date.now(),e.show();return!1};for(t in e){o=e[t],n="#"+t+" .collapse-content";try{r=o.split(" ")}catch(e){continue}s={genus:r[0],species:null!=(a=r[1])?a:""},$("button#"+t+"-button-trigger").attr("data-taxon",o).click(function(){var e,t,a,l;return o=$(this).attr("data-taxon"),r=o.split(" "),s={genus:r[0],species:null!=(a=r[1])?a:""},n=$(this).parent().find(".collapse-content"),(null!=(l=$(this).attr("data-has-data"))&&l).toBool()?console.debug("Already has data"):($(this).attr("data-has-data","true"),t="<paper-spinner active></paper-spinner> Fetching Data...",$(n).html(t),fetchMiniTaxonBlurb(s,n)),e=$(this).parent().find("iron-collapse").get(0),delay(250,function(t){return function(){return console.debug("is opened?",e.opened),e.opened?($("#post-species-summary").addClass("has-open-collapse"),$(t).parent().addClass("is-open")):($("#post-species-summary").removeClass("has-open-collapse"),$(".is-open").removeClass("is-open"))}}(this))})}return!1},fetchMiniTaxonBlurb=function(e,t,a){var n,o,r;null==a&&(a=!1),n=["action=taxon"];for(o in e)r=e[o],n.push(o+"="+encodeURIComponent(r));return $.get("api.php",n.join("&"),"json").done(function(e){var a,n,o,r,s,l,i,c,d,p,u,h,g,b,m,f,y,v,w,x,C,k,_,S,A,F,E,N,L,D,B,T,j,O,M,R,I,z,G,J,U,W,q,P,H,V,Y,K,Q;if(console.log("Got result",e),!0!==e.status)return b='<div class="alert alert-danger">\n  <p>\n    <strong>Error:</strong> Couldn\'t fetch taxon data\n  </p>\n</div>',$(t).html(b),!1;if($(t).html(""),e.isGenusLookup)for(y=[],v=0,w=(M=Object.toArray(e.taxa)).length;v<w;v++)q=M[v],y.push(q.data);else y=[e];for(j=[],S=0,x=y.length;S<x;S++){H=y[S];try{console.log("Doing blurb for",JSON.stringify(H.taxon));try{if("object"!=typeof H.amphibiaweb.data.common_name)throw{message:"NOT_OBJECT"};for(L=Object.toArray(H.amphibiaweb.data.common_name),N="",m=0,A=0,C=L.length;A<C;A++)++m,(F=L[A])===H.iucn.data.main_common_name&&(F="<strong>"+F.trim()+"</strong>"),N+=F.trim(),L.length!==m&&(N+=", ")}catch(e){g=e,"string"==typeof H.amphibiaweb.data.common_name?N=H.amphibiaweb.data.common_name:(N=null!=(R=null!=(I=H.iucn)&&null!=(z=I.data)?z.main_common_name:void 0)?R:"",console.warn("Couldn't create common name string! "+g.message),console.warn(g.stack),console.debug(H.amphibiaweb.data))}E=isNull(N)?"":"<p>\n  <strong>Names:</strong> "+N+"\n</p>",d='<p>Sampled in the following countries:</p>\n<ul class="country-list">\n  <li>'+Object.toArray(H.adp.countries).join("</li><li>")+"</li>\n</ul>",_="<div class='clade-project-summary'>\n  <p>Represented in <strong>"+H.adp.project_count+"</strong> projects with <strong>"+H.adp.samples+"</strong> samples:</p>",G=H.adp.projects;for(O in G)Q=K=G[O],!0!==noDefaultRender&&K.length>30&&(K=K.slice(0,27)+"..."),_+='<a class="btn btn-primary newwindow project-button-link" href="'+uri.urlString+"/project.php?id="+O+'" data-toggle="tooltip" title="'+Q+'">\n  '+K+"\n</a>";_+="</div>",0===H.adp.samples&&(_="<p>There are no samples of this taxon in our database.</p>",d=""),V=e.isGenusLookup||!0===noDefaultRender?"<p style='display:inline-block'>\n  <strong>Taxon:</strong> "+('<span class="sciname">\n  <span class="genus">'+H.taxon.genus+'</span>\n  <span class="species">'+H.taxon.species+"</span>\n</span>")+"\n</p>":"",f=(f=encode64(JSON.stringify(H.taxon))).replace(/[^\w0-9]/gim,""),console.log("Appended blurb for idTaxon",f),console.debug("Taxon data:",H,null!=(J=H.amphibiaweb)?J.map:void 0),a="<div class='blurb-info' id=\"taxon-blurb-"+f+'">\n  '+V+'\n  <div style=\'display:inline-block\'>\n    <paper-icon-button\n      icon="maps:satellite"\n      onclick="popShowRangeMap(this)"\n      data-genus="'+H.taxon.genus+'"\n      data-kml="'+(null!=(U=H.amphibiaweb)&&null!=(W=U.map)?W.shapefile:void 0)+'"\n      data-species="'+H.taxon.species+'"\n      data-toggle="tooltip"\n      title="View Range Map"\n      data-placement="right">\n    </paper-icon-button>\n  </div>\n  <p>\n    <strong>IUCN Status:</strong> '+H.iucn.category+"\n  </p>\n  "+E+"\n  "+d+'\n  <div class="charts-container row">\n  </div>\n  '+_+'\n  <div class="aweb-link-species click" data-href="http://amphibiaweb.org/cgi/amphib_query?rel-genus=equals&rel-species=equals&where-genus='+H.taxon.genus.toTitleCase()+"&where-species="+H.taxon.species+'" data-newtab="true">\n    <span class="sciname">\n      '+H.taxon.genus.toTitleCase()+" "+H.taxon.species+'\n    </span> on AmphibiaWeb\n    <iron-icon icon="icons:open-in-new"></iron-icon>\n  </div>\n</div>';try{if(-1!==H.taxon.species.search(/sp\./)){P={blurb:a,taxonData:H,idTaxon:f,targetSelector:t},j.push(P);continue}}catch(e){}$(t).append(a),bindClicks(),formatScientificNames(".aweb-link-species .sciname"),0===H.adp.samples&&(stopLoad(),delay(1e3,function(){return stopLoad()})),h=H.adp.disease_data;for(u in h)(p=h[u]).detected.no_confidence!==p.detected.total&&(s={type:"pie",data:{labels:[u+" detected",u+" not detected",u+" inconclusive data"],datasets:[{data:[p.detected.true,p.detected.false,p.detected.no_confidence],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]}},(n=document.createElement("canvas")).setAttribute("class","chart dynamic-pie-chart"),r=f+"-"+u+"-testdata",n.setAttribute("id",r),o=r+"-container",l=$(t).find("#taxon-blurb-"+f).find(".charts-container").get(0),c='<div id="'+o+'" class="col-xs-6">\n</div>',$(l).append(c),$("#"+o).get(0).appendChild(n),i=$("#"+r),T=new Chart(i,s),_adp.taxonCharts[r]=T,stopLoad()),p.fatal.unknown!==p.fatal.total&&(s={type:"pie",data:{labels:[u+" fatal",u+" not fatal",u+" unknown fatality"],datasets:[{data:[p.fatal.true,p.fatal.false,p.fatal.unknown],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]}},(n=document.createElement("canvas")).setAttribute("class","chart dynamic-pie-chart"),r=f+"-"+u+"-fataldata",n.setAttribute("id",r),o=r+"-container",l=$(t).find(".charts-container").get(0),c='<div id="'+o+'" class="col-xs-6">\n</div>',$(l).append(c),$("#"+o).get(0).appendChild(n),i=$("#"+r),T=new Chart(i,s),_adp.taxonCharts[r]=T,stopLoad())}catch(e){g=e;try{Y="",Y='for\n  <span class="sciname">\n    <span class="genus">'+H.taxon.genus+'</span>\n    <span class="species">'+H.taxon.species+"</span>\n  </span>"}catch(e){}b='<div class="alert alert-danger">\n  <p>\n    <strong>Error:</strong> Couldn\'t fetch taxon data '+Y+"\n  </p>\n</div>",$(t).append(b),console.error("Couldn't get taxon data -- "+g.message,H),console.warn(g.stack),stopLoadError()}}if(j.length>0){for(console.log("Have "+j.length+" unidentified species"),B=0,k=j.length;B<k;B++){D=j[B];try{t=D.targetSelector,f=D.idTaxon,H=D.taxonData,a=D.blurb,$(t).append(a),h=H.adp.disease_data;for(u in h)(p=h[u]).detected.no_confidence!==p.detected.total&&(s={type:"pie",data:{labels:[u+" detected",u+" not detected",u+" inconclusive data"],datasets:[{data:[p.detected.true,p.detected.false,p.detected.no_confidence],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]}},(n=document.createElement("canvas")).setAttribute("class","chart dynamic-pie-chart"),r=f+"-"+u+"-testdata",n.setAttribute("id",r),o=r+"-container",l=$(t).find("#taxon-blurb-"+f).find(".charts-container").get(0),c='<div id="'+o+'" class="col-xs-6">\n</div>',$(l).append(c),$("#"+o).get(0).appendChild(n),i=$("#"+r),T=new Chart(i,s),_adp.taxonCharts[r]=T,stopLoad()),p.fatal.unknown!==p.fatal.total&&(s={type:"pie",data:{labels:[u+" fatal",u+" not fatal",u+" unknown fatality"],datasets:[{data:[p.fatal.true,p.fatal.false,p.fatal.unknown],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]}},(n=document.createElement("canvas")).setAttribute("class","chart dynamic-pie-chart"),r=f+"-"+u+"-fataldata",n.setAttribute("id",r),o=r+"-container",l=$(t).find(".charts-container").get(0),c='<div id="'+o+'" class="col-xs-6">\n</div>',$(l).append(c),$("#"+o).get(0).appendChild(n),i=$("#"+r),T=new Chart(i,s),_adp.taxonCharts[r]=T,stopLoad())}catch(e){}}stopLoad(),delay(1e3,function(){return console.debug("Doing 1s delayed stopLoad"),stopLoad()})}return!1}).error(function(e,a){var n;return n='<div class="alert alert-danger">\n  <p>\n    <strong>Error:</strong> Server error fetching taxon data ()\n  </p>\n</div>',$(t).html(n),console.error("Couldn't fetch taxon data from server"),console.warn(e,a),stopLoadError(),!1}),!1},renderNewChart=function(){var e,t,a,n,o,r,s,l,i;try{null!=_adp.zoomChart&&_adp.zoomChart.destroy()}catch(e){}for(e={},o=0,r=(l=$(".chart-param")).length;o<r;o++){s=l[o],n=$(s).attr("data-key").replace(" ","-");try{if(null==p$(s).checked)throw"Not Toggle";e[n]=p$(s).checked}catch(t){a=$(p$(s).selectedItem).attr("data-value"),isNull(a)&&(a=p$(s).selectedItemLabel.toLowerCase().replace(" ","-")),e[n]=a}}return $(".chart.dynamic-chart").remove(),$(".chart-title").remove(),t=null!=(i=e.bin)?i:"location",delete e.bin,console.info("Going to generate a new chart with the following options",e),getServerChart(t,e),e},dropdownSortEvents=function(){var e;return!0!==("undefined"!=typeof _adp&&null!==_adp?_adp.hasBoundSortDisables:void 0)&&($("paper-dropdown-menu#binned-by paper-listbox").on("iron-select",function(){return e.debounce(50,null,null,this)}),$("paper-dropdown-menu#binned-by paper-listbox > paper-item").click(function(){return e.debounce(50,null,null,$(this).parents("paper-listbox"))}),_adp.hasBoundSortDisabled=!0),e=function(e){var t,a,n,o,r,s,l,i,c,d,p,u;for(o=p$(e).selectedItem,console.log("Firing doSortDisables",o,e),i=$(o).attr("data-value"),isNull(i)&&(i=$(o).text().trim().toLowerCase()),n=i,l=0,r=!1,c=0,d=(p=$("paper-dropdown-menu#sort-by paper-listbox paper-item")).length;c<d;c++){if(s=p[c],a=null!=(u=$(s).attr("data-bins"))?u:"",t=a.split(","),console.log("Searching allowed bins for '"+n+"'",t,s),indexOf.call(t,n)>=0){try{p$(s).disabled=!1}catch(e){}$(s).removeAttr("disabled"),r=!0}else{try{p$(s).disabled=!0}catch(e){}$(s).attr("disabled","disabled")}r||l++}return p$("paper-dropdown-menu#sort-by paper-listbox").selected=l,!1},console.log("Dropdown sort events bound"),!1},popShowRangeMap=function(e,t){var a,n,o,r,s,l;if("object"!=typeof e)return!1;if(n=e,isNull(e.genus)||isNull(e.species))try{r=$(e).attr("data-genus"),l=$(e).attr("data-species"),isNull(t)&&(t=$(e).attr("data-kml")),e={genus:r,species:l}}catch(e){}if(isNull(e.genus)||isNull(e.species))return toastStatusMessage("Unable to show range map"),!1;if(isNull(t)){try{t=$(n).attr("data-kml")}catch(e){}isNull(t)&&console.warn("Unable to read KML attr and none passed")}return o="https://mol.org/species/map/",a={embed:"true"},s='<paper-dialog modal id="species-range-map" class="pop-map dashboard-map" data-taxon-genus="'+e.genus+'" data-taxon-species="'+e.species+'">\n  <h2>Range map for <span class="genus">'+e.genus+'</span> <span class="species">'+e.species+'</span></h2>\n  <paper-dialog-scrollable>\n    \x3c!-- <iframe class="mol-embed" src="'+o+e.genus.toTitleCase()+"_"+e.species+"?"+buildQuery(a)+'"></iframe> --\x3e\n  <google-map\n    api-key="'+gMapsApiKey+'"\n    kml="'+t+'"\n    map-type="hybrid">\n    </google-map>\n  </paper-dialog-scrollable>\n  <div class="buttons">\n    <paper-button dialog-dismiss>Close</paper-button>\n  </div>\n</paper-dialog>',$("#species-range-map").remove(),$("body").append(s),$("#species-range-map").on("iron-overlay-opened",function(){var e;return console.debug("Opened"),e=$(this).find("paper-dialog-scrollable").height(),$(this).find("paper-dialog-scrollable > div#scrollable").css("max-height",e+"px").css("height",e+"px"),console.debug($(this).width(),$(this).height(),e),!1}),p$("#species-range-map").open(),!0},$(function(){console.log("Loaded dashboard");try{isNull(window.noDefaultRender)&&(window.noDefaultRender=!1)}catch(e){window.noDefaultRender=!1}return console.debug("NDR state",window.noDefaultRender),!0!==window.noDefaultRender&&getServerChart(),$("#generate-chart").click(function(){return renderNewChart.debounce(50)}),delayPolymerBind("paper-dropdown-menu#binned-by",function(){return $(".chart-param paper-listbox").on("iron-select",function(){return console.log("Firing iron-select event",this),renderNewChart.debounce(50)}),$(".chart-param paper-listbox paper-item").on("click",function(){return console.log("Firing click event on paper-item",this),renderNewChart.debounce(50)}),$("#diseasetested-select").on("selected-item-changed",function(){return console.log("Firing selection change"),renderNewChart.debounce(50)}),dropdownSortEvents()}),!1});
//# sourceMappingURL=dashboard.min.js.map