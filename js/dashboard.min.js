var adminApiTarget,apiTarget,createChart,createOverflowMenu,dropdownSortEvents,fetchMiniTaxonBlurb,fetchMiniTaxonBlurbs,getRandomDataColor,getServerChart,popShowRangeMap,renderNewChart,indexOf=[].indexOf||function(e){for(var a=0,t=this.length;a<t;a++)if(a in this&&this[a]===e)return a;return-1};apiTarget=uri.urlString+"api.php",adminApiTarget=uri.urlString+"admin-api.php",window._adp={taxonCharts:{}};try{(createOverflowMenu=function(){return checkLoggedIn(function(e){var a,t;return a=e.status?'    <paper-item data-href="'+uri.urlString+'admin" class="click">\n  <iron-icon icon="icons:settings-applications"></iron-icon>\n  Account Settings\n</paper-item>\n<paper-item data-href="'+uri.urlString+'admin-login.php?q=logout" class="click">\n  <span class="glyphicon glyphicon-log-out"></span>\n  Log Out\n</paper-item>':"",t='<paper-menu-button id="header-overflow-menu" vertical-align="bottom" horizontal-offset="-15" horizontal-align="right" vertical-offset="30">\n  <paper-icon-button icon="icons:more-vert" class="dropdown-trigger"></paper-icon-button>\n  <paper-menu class="dropdown-content">\n    '+a+'\n    <paper-item data-href="'+uri.urlString+'/dashboard.php" class="click">\n      Data Dashboard\n    </paper-item>\n    <paper-item data-href="https://amphibian-disease-tracker.readthedocs.org" class="click">\n      <iron-icon icon="icons:chrome-reader-mode"></iron-icon>\n      Documentation\n    </paper-item>\n    <paper-item data-href="https://github.com/AmphibiaWeb/amphibian-disease-tracker" class="click">\n      <iron-icon icon="glyphicon-social:github"></iron-icon>\n      Github\n    </paper-item>\n    <paper-item data-href="'+uri.urlString+'about.php" class="click">\n      About / Legal\n    </paper-item>\n  </paper-menu>\n</paper-menu-button>',$("#header-overflow-menu").remove(),$("header#header-bar .logo-container + p").append(t),isNull(a)||$("header#header-bar paper-icon-button[icon='icons:settings-applications']").remove(),bindClicks()}),!1})()}catch(e){}createChart=function(e,a,t,n,o){var r,s,l,i,c,d,p,u,h;if(null==t&&(t=!1),null==n&&(n="main"),"object"!=typeof a)return console.error("Can't create a chart without a data object"),!1;if("function"==typeof t&&isNull(o)&&(o=t,t=!1),p={label:"Sample Data",data:[65,59,80,81,56,55,40],borderWidth:1,borderColor:["rgba(255,99,132,1)","rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)","rgba(75, 192, 192, 1)","rgba(153, 102, 255, 1)","rgba(255, 159, 64, 1)"],backgroundColor:["rgba(255, 99, 132, 0.2)","rgba(54, 162, 235, 0.2)","rgba(255, 206, 86, 0.2)","rgba(75, 192, 192, 0.2)","rgba(153, 102, 255, 0.2)","rgba(255, 159, 64, 0.2)"]},h=[p],u={labels:["January","February","March","April","May","June","July"],datasets:h},isNull(a.data)&&(c=a,console.warn("No data for chart, will use sample data",c)),null==a.data&&(a.data=u),null==a.type&&(a.type="bar"),"object"!=typeof a.options&&(a.options={responsive:!0,scales:{yAxes:[{ticks:{beginAtZero:!0}}]}}),$(e).exists())console.log("Canvas already exists:",e);else{console.log("Creating new canvas"),i="#"===e.slice(0,1)?e.slice(1):"dataChart-"+$("canvas").length,(r=document.createElement("canvas")).setAttribute("class","chart dynamic-chart col-xs-12"),r.setAttribute("id",i);try{_adp.newCanvas=r}catch(e){}document.querySelector(n).appendChild(r)}if(null!=(null!=(d=_adp.chart)?d.chart:void 0)&&_adp.chart.chart.destroy(),l=$(e),isNull(l))try{console.log("trying again to make context"),l=$(r)}catch(e){}return s=new Chart(l,a),_adp.chart={chart:s,ctx:l},console.info("Chart created with",a),"function"==typeof o&&o(),s},getRandomDataColor=function(){var e;return e="rgba("+randomInt(0,255)+","+randomInt(0,255)+","+randomInt(0,255),{border:e+",1)",background:e+",0.2)"}},getServerChart=function(e,a){var t,n,o,r,s;null==e&&(e="location"),startLoad();try{$("#post-species-summary").remove()}catch(e){}if(t="action=chart&bin="+e,"object"==typeof a){n=[];for(o in a)r=a[o],n.push(o+"="+r);t+="&"+n.join("&")}try{$("#diseasetested-select").exists()&&(s=p$("#diseasetested-select").selectedItem.name,isNull(s)||(t+="&disease="+s))}catch(e){}return console.debug("Fetching chart with",apiTarget+"?"+t),$.post(apiTarget,t,"json").done(function(n){var o,r,s,l,i,c,d,p,u,h,g,b;if(!1===n.status)return console.error("Server had a problem fetching chart data - "+n.human_error),console.warn(n),stopLoadError(n.human_error),!1;for(console.debug("Fetched chart",n),o=n.data,l=Object.toArray(o.datasets),i=0,c=0,d=l.length;c<d;c++){if(s=l[c],s.data=Object.toArray(s.data),console.log("examine data",s),null==s.borderWidth&&(s.borderWidth=1),null==s.backgroundColor)for(s.borderColor=[],s.backgroundColor=[],b=0,u=0,p=(g=s.data).length;u<p;u++)g[u],"PosNeg"===s.stack?(-1!==s.label.toLowerCase().search("positive")&&(r={border:"rgba(220,30,25,1)",background:"rgba(220,30,25,0.2)"}),-1!==s.label.toLowerCase().search("negative")&&(r={border:"rgba(25,70,220,1)",background:"rgba(25,70,220,0.2)"})):"totals"===s.stack?-1!==s.label.toLowerCase().search("total")&&(r={border:"rgba(25,200,90,1)",background:"rgba(25,200,90,0.2)"}):r=getRandomDataColor(),s.borderColor.push(r.border),s.backgroundColor.push(r.background),++b;l[i]=s,++i}switch(n.use_preprocessor){case"geocoder":console.log("Got results",n),h=function(e){var a,t,n,r,c,d,p,u,h,g,b,m,f,y,v,x,w,C,$,k,_,S,A,F;for(console.log("Starting geocoder preprocessor",l),t=0,g=[],r=[],c={},i=0,F=!1,_=[],y=0,b=l.length;y<b;y++){for(d=l[y],s=d.data,console.log("Data blob",s),F||(!1,n=i,u=0,h=0),p=0,v=0,m=s.length;v<m;v++){if(C=s[v],++p,!isNull(C.points)){for(console.debug("Using pointset",C),a={points:[],title:A=C.title,project:$=C.project_id},t=0,console.log("Looking at project #"+$+", '"+A+"'"),x=0,f=(k=Object.toArray(C.points)).length;x<f;x++){w=k[x];try{S=canonicalizePoint(w),a.points.push(S),t++}catch(e){}}if(0===t){console.log("Skipping project #"+$+" = '"+A+"' with no points");continue}u++,80,localityFromMapBuilder(a,function(a,t){var s,p,b,m,f,y,v;h++;try{for(m=0,b=(v=null!=(f=t.views)?f:geo.geocoderViews).length;m<b;m++)y=v[m],indexOf.call(y.types,"country")<0||(p=y.formatted_address)}catch(e){p="Multiple Countries"}if(isNull(p)&&(p=a),console.log("Final locality '"+p+"' for "+t.title),indexOf.call(g,p)<0?(g.push(p),c[p]=r.length,r.push(1)):(s=c[p],r[s]++),h===u&&(d.data=r,l[n]=d,h=0,u=0,F=!1,i===l.length))return o.labels=g,e()})}p===s.length&&(!0,F=!0)}_.push(++i)}return _};break;default:h=function(e){return e()}}return h(function(){var r,i,c,d,p,u,h,g,b,m,f,y,v,x,w;if(r={labels:Object.toArray(o.labels),datasets:l},i={data:r,type:null!=(p=o.type)?p:"bar"},isNull(o.stacking))try{null==i.options&&(i.options={scales:{xAxes:[{scaleLabel:{}}],yAxes:[{scaleLabel:{}}]}}),null!=n.title&&(i.options.title={display:!0,text:n.title}),null!=(u=i.options)&&null!=(h=u.scales)&&null!=(g=h.xAxes)&&null!=(b=g[0])&&(b.scaleLabel={labelString:n.axes.x,display:!0}),null!=(m=i.options)&&null!=(f=m.scales)&&null!=(y=f.yAxes)&&null!=(v=y[0])&&(v.scaleLabel={labelString:n.axes.y,display:!0})}catch(e){d=e,console.warn("Couldn't set up redundant options - "+d.message),console.warn(d.stack)}else i.options={scales:{xAxes:[{scaleLabel:{labelString:n.axes.x,display:!0},stacked:o.stacking.x}],yAxes:[{scaleLabel:{labelString:n.axes.y,display:!0},stacked:o.stacking.y}]}},null!=n.title&&(i.options.title={display:!0,text:n.title});try{x=r.labels.join(","+JSON.stringify(r.datasets))}catch(e){try{x=r.labels.join(",")}catch(e){x="BAD_STRINGIFY"}}return w=md5(x),c="#dataChart-"+l[0].label.replace(/ /g,"-")+"-"+w,console.log("Creating chart with",c,i),createChart(c,i,function(){var d,p,u,h,g,b,m,f,y,v,x,C;if(isNull(n.full_description)||$("#chart-"+l[0].label.replace(" ","-")).before("<h3 class='col-xs-12 text-center chart-title'>"+n.full_description+"</h3>"),"species"===e){for(h={},p="",y=0,b=(v=r.labels).length;y<b;y++)d=v[y],isNull(d)||(p+='<div class="col-xs-12 col-md-6 col-lg-4">\n  <button type="button" class="btn btn-default collapse-trigger" data-target="#'+(C=md5(d+"-"+Date.now()))+'" id="'+C+'-button-trigger" data-taxon="'+d+'">\n  '+d+'\n  </button>\n  <iron-collapse id="'+C+'" data-bin="'+a.sort+'" data-taxon="'+d+'" class="taxon-collapse">\n    <div class="collapse-content alert">\n      Binned data for '+d+". Should populate this asynchronously ....\n    </div>\n  </iron-collapse>\n</div>",h[C]=d);"species"===a.sort?x=(f=m="species")+" Summaries":(m="genera",f="genus",x="Species Summaries by Genus"),g='<section id="post-species-summary" class="col-xs-12" style="margin-top:2rem;">\n  <div class="row">\n    <a href="'+(u=_adp.chart.chart.toBase64Image())+'" class="btn btn-primary pull-right col-xs-8 col-sm-4 col-md-3 col-lg-2" id="download-main-chart" download disabled>\n      <iron-icon icon="icons:cloud-download"></iron-icon>\n      Download Chart\n    </a>\n  </div>\n  <p hidden>\n    These data are generated from over '+n.rows+" "+m+". AND MORE SUMMARY BLAHDEYBLAH. Per "+f+' summary links, etc.\n  </p>\n  <div class="row">\n    <h3 class="capitalize col-xs-12">'+x+' <small class="text-muted">Ordered as the above chart</small></h3>\n    <p class="col-xs-12 text-muted">Click on a taxon to toggle charts and more data for that taxon</p>\n    '+p+"\n  </div>\n</section>";try{$("#post-species-summary").remove()}catch(e){}$(c).after(g),delay(750,function(){return u=_adp.chart.chart.toBase64Image(),$("#download-main-chart").attr("href",u).removeAttr("disabled")});try{bindCollapsors(),_adp.fetchUpdatesFor=h,delay(250,function(){return fetchMiniTaxonBlurbs()})}catch(e){}return _adp.chart.ctx.click(function(e){var a,t,n,o,r;return t=_adp.chart.chart.getDatasetAtEvent(e),o=_adp.chart.chart.getElementAtEvent(e),console.debug("Dataset",t),console.debug("Element",o),n=o[0]._index,s=t[n],console.debug("Specific data:",s),r=s._model.label,console.debug("Taxon clicked:",r),getRandomDataColor(),a="button[data-taxon='"+r+"']",console.debug("Selector test",a,$(a).exists()),$(".success-glow").removeClass("success-glow"),$(a).addClass("success-glow").get(0).scrollIntoView(!1)})}if("location"===e)return _adp.chart.ctx.click(function(e){var a,n,r,l;return n=_adp.chart.chart.getDatasetAtEvent(e),l=_adp.chart.chart.getElementAtEvent(e),console.debug("Dataset",n),console.debug("Element",l),r=l[0]._index,s=n[r],console.debug("Specific data:",s),a=s._model.label,console.debug("country clicked:",a),t={async:!0,action:"country_taxon",country:a},$.get("dashboard.php",buildQuery(t,"json")).done(function(e){var t,n,r,s,l,d,p;if(console.debug("Got country result",e),e.status){console.log("Should build out new chart here"),i={type:"bar",options:{responsive:!0,title:{display:!0,text:"Taxa in "+a},scales:{xAxes:[{scaleLabel:{labelString:"Taxa",display:!0}}],yAxes:[{scaleLabel:{labelString:"Sample Count",display:!0},stacked:!0}]}}},s={label:"Positive Samples",data:[],borderColor:"rgba(220,30,25,1)",backgroundColor:"rgba(220,30,25,0.3)",borderWidth:1,stack:"pnSamples"},r={label:"Negative Samples",data:[],borderColor:"rgba(25,70,220,1)",backgroundColor:"rgba(25,70,220,0.3)",borderWidth:1,stack:"pnSamples"},n=[],l=e.data;for(d in l)p=l[d],r.data.push(toInt(p.false)),s.data.push(toInt(p.true)),n.push(d);o={labels:n,datasets:[s,r]},i.data=o,console.log("USing chart data",i),w=JSON.stringify(o),c="#locale-zoom-chart",t=$(c),$(c).attr("data-uid",w),null!=_adp.zoomChart&&_adp.zoomChart.destroy(),_adp.zoomChart=new Chart(t,i)}return!1}),!1})}),stopLoad()}),!1}).fail(function(e,a){return console.error("AJAX error",e,a),stopLoadError("There was a problem communicating with the server"),!1}),!1},fetchMiniTaxonBlurbs=function(e){var a,t,n,o,r,s;null==e&&(e=_adp.fetchUpdatesFor),console.debug("Binding / setting up taxa updates for",e),_adp.collapseOpener=function(e){if(e.opened){if(Date.now()-_adp.lastOpened<1e3)return!1;e.hide()}else _adp.lastOpened=Date.now(),e.show();return!1};for(a in e){o=e[a],n="#"+a+" .collapse-content";try{r=o.split(" ")}catch(e){continue}s={genus:r[0],species:null!=(t=r[1])?t:""},$("button#"+a+"-button-trigger").attr("data-taxon",o).click(function(){var e,a,t,l;return o=$(this).attr("data-taxon"),r=o.split(" "),s={genus:r[0],species:null!=(t=r[1])?t:""},n=$(this).parent().find(".collapse-content"),(null!=(l=$(this).attr("data-has-data"))&&l).toBool()?console.debug("Already has data"):($(this).attr("data-has-data","true"),a="<paper-spinner active></paper-spinner> Fetching Data...",$(n).html(a),fetchMiniTaxonBlurb(s,n)),e=$(this).parent().find("iron-collapse").get(0),delay(250,function(a){return function(){return console.debug("is opened?",e.opened),e.opened?($("#post-species-summary").addClass("has-open-collapse"),$(a).parent().addClass("is-open")):($("#post-species-summary").removeClass("has-open-collapse"),$(".is-open").removeClass("is-open"))}}(this))})}return!1},fetchMiniTaxonBlurb=function(e,a,t){var n,o,r;null==t&&(t=!1),n=["action=taxon"];for(o in e)r=e[o],n.push(o+"="+encodeURIComponent(r));return $.get("api.php",n.join("&"),"json").done(function(e){var t,n,o,r,s,l,i,c,d,p,u,h,g,b,m,f,y,v,x,w,C,k,_,S,A,F,E,N,j,B,D,L,O,T,M,I,R,z,G,J,U,W,P,H,Y,q,Q,V,K;if(console.log("Got result",e),!0!==e.status)return b='<div class="alert alert-danger">\n  <p>\n    <strong>Error:</strong> Couldn\'t fetch taxon data\n  </p>\n</div>',$(a).html(b),!1;if($(a).html(""),e.isGenusLookup)for(y=[],v=0,x=(M=Object.toArray(e.taxa)).length;v<x;v++)P=M[v],y.push(P.data);else y=[e];for(O=[],S=0,w=y.length;S<w;S++){Y=y[S];try{console.log("Doing blurb for",JSON.stringify(Y.taxon));try{if("object"!=typeof Y.amphibiaweb.data.common_name)throw{message:"NOT_OBJECT"};for(j=Object.toArray(Y.amphibiaweb.data.common_name),N="",m=0,A=0,C=j.length;A<C;A++)++m,(F=j[A])===Y.iucn.data.main_common_name&&(F="<strong>"+F.trim()+"</strong>"),N+=F.trim(),j.length!==m&&(N+=", ")}catch(e){g=e,"string"==typeof Y.amphibiaweb.data.common_name?N=Y.amphibiaweb.data.common_name:(N=null!=(I=null!=(R=Y.iucn)&&null!=(z=R.data)?z.main_common_name:void 0)?I:"",console.warn("Couldn't create common name string! "+g.message),console.warn(g.stack),console.debug(Y.amphibiaweb.data))}E=isNull(N)?"":"<p>\n  <strong>Names:</strong> "+N+"\n</p>",d='<ul class="country-list">\n  <li>'+Object.toArray(Y.adp.countries).join("</li><li>")+"</li>\n</ul>",_="<div class='clade-project-summary'>\n  <p>Represented in <strong>"+Y.adp.project_count+"</strong> projects with <strong>"+Y.adp.samples+"</strong> samples:</p>",G=Y.adp.projects;for(T in G)K=V=G[T],V.length>30&&(V=V.slice(0,27)+"..."),_+='<a class="btn btn-primary newwindow project-button-link" href="'+uri.urlString+"/project.php?id="+T+'" data-toggle="tooltip" title="'+K+'">\n  '+V+"\n</a>";_+="</div>",q=e.isGenusLookup?"<p>\n  <strong>Taxon:</strong> "+('<span class="sciname">\n  <span class="genus">'+Y.taxon.genus+'</span>\n  <span class="species">'+Y.taxon.species+"</span>\n</span>")+"\n</p>":"",f=(f=encode64(JSON.stringify(Y.taxon))).replace(/[^\w0-9]/gim,""),console.log("Appended blurb for idTaxon",f),console.debug("Taxon data:",Y,null!=(J=Y.amphibiaweb)?J.map:void 0),t="<div class='blurb-info' id=\"taxon-blurb-"+f+'">\n  '+q+'\n  <div>\n    <paper-icon-button\n      icon="maps:satellite"\n      onclick="popShowRangeMap(this)"\n      data-genus="'+Y.taxon.genus+'"\n      data-kml="'+(null!=(U=Y.amphibiaweb)&&null!=(W=U.map)?W.shapefile:void 0)+'"\n      data-species="'+Y.taxon.species+'">\n    </paper-icon-button>\n  </div>\n  <p>\n    <strong>IUCN Status:</strong> '+Y.iucn.category+"\n  </p>\n  "+E+"\n  <p>Sampled in the following countries:</p>\n  "+d+'\n  <div class="charts-container row">\n  </div>\n  '+_+"\n</div>";try{if(-1!==Y.taxon.species.search(/sp\./)){H={blurb:t,taxonData:Y,idTaxon:f,targetSelector:a},O.push(H);continue}}catch(e){}$(a).append(t),h=Y.adp.disease_data;for(u in h)(p=h[u]).detected.no_confidence!==p.detected.total&&(s={type:"pie",data:{labels:[u+" detected",u+" not detected",u+" inconclusive data"],datasets:[{data:[p.detected.true,p.detected.false,p.detected.no_confidence],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]}},(n=document.createElement("canvas")).setAttribute("class","chart dynamic-pie-chart"),r=f+"-"+u+"-testdata",n.setAttribute("id",r),o=r+"-container",l=$(a).find("#taxon-blurb-"+f).find(".charts-container").get(0),c='<div id="'+o+'" class="col-xs-6">\n</div>',$(l).append(c),$("#"+o).get(0).appendChild(n),i=$("#"+r),L=new Chart(i,s),_adp.taxonCharts[r]=L),p.fatal.unknown!==p.fatal.total&&(s={type:"pie",data:{labels:[u+" fatal",u+" not fatal",u+" unknown fatality"],datasets:[{data:[p.fatal.true,p.fatal.false,p.fatal.unknown],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]}},(n=document.createElement("canvas")).setAttribute("class","chart dynamic-pie-chart"),r=f+"-"+u+"-fataldata",n.setAttribute("id",r),o=r+"-container",l=$(a).find(".charts-container").get(0),c='<div id="'+o+'" class="col-xs-6">\n</div>',$(l).append(c),$("#"+o).get(0).appendChild(n),i=$("#"+r),L=new Chart(i,s),_adp.taxonCharts[r]=L)}catch(e){g=e;try{Q="",Q='for\n  <span class="sciname">\n    <span class="genus">'+Y.taxon.genus+'</span>\n    <span class="species">'+Y.taxon.species+"</span>\n  </span>"}catch(e){}b='<div class="alert alert-danger">\n  <p>\n    <strong>Error:</strong> Couldn\'t fetch taxon data '+Q+"\n  </p>\n</div>",$(a).append(b),console.error("Couldn't get taxon data -- "+g.message,Y),console.warn(g.stack)}}if(O.length>0)for(console.log("Have "+O.length+" unidentified species"),D=0,k=O.length;D<k;D++){B=O[D];try{a=B.targetSelector,f=B.idTaxon,Y=B.taxonData,t=B.blurb,$(a).append(t),h=Y.adp.disease_data;for(u in h)(p=h[u]).detected.no_confidence!==p.detected.total&&(s={type:"pie",data:{labels:[u+" detected",u+" not detected",u+" inconclusive data"],datasets:[{data:[p.detected.true,p.detected.false,p.detected.no_confidence],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]}},(n=document.createElement("canvas")).setAttribute("class","chart dynamic-pie-chart"),r=f+"-"+u+"-testdata",n.setAttribute("id",r),o=r+"-container",l=$(a).find("#taxon-blurb-"+f).find(".charts-container").get(0),c='<div id="'+o+'" class="col-xs-6">\n</div>',$(l).append(c),$("#"+o).get(0).appendChild(n),i=$("#"+r),L=new Chart(i,s),_adp.taxonCharts[r]=L),p.fatal.unknown!==p.fatal.total&&(s={type:"pie",data:{labels:[u+" fatal",u+" not fatal",u+" unknown fatality"],datasets:[{data:[p.fatal.true,p.fatal.false,p.fatal.unknown],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]}},(n=document.createElement("canvas")).setAttribute("class","chart dynamic-pie-chart"),r=f+"-"+u+"-fataldata",n.setAttribute("id",r),o=r+"-container",l=$(a).find(".charts-container").get(0),c='<div id="'+o+'" class="col-xs-6">\n</div>',$(l).append(c),$("#"+o).get(0).appendChild(n),i=$("#"+r),L=new Chart(i,s),_adp.taxonCharts[r]=L)}catch(e){}}return!1}).error(function(e,t){var n;return n='<div class="alert alert-danger">\n  <p>\n    <strong>Error:</strong> Server error fetching taxon data ()\n  </p>\n</div>',$(a).html(n),console.error("Couldn't fetch taxon data from server"),console.warn(e,t),!1}),!1},renderNewChart=function(){var e,a,t,n,o,r,s,l;try{null!=_adp.zoomChart&&_adp.zoomChart.destroy()}catch(e){}for(e={},n=0,o=(s=$(".chart-param")).length;n<o;n++){r=s[n],t=$(r).attr("data-key").replace(" ","-");try{if(null==p$(r).checked)throw"Not Toggle";e[t]=p$(r).checked}catch(a){e[t]=p$(r).selectedItemLabel.toLowerCase().replace(" ","-")}}return $(".chart.dynamic-chart").remove(),$(".chart-title").remove(),a=null!=(l=e.bin)?l:"location",delete e.bin,console.info("Going to generate a new chart with the following options",e),getServerChart(a,e),e},dropdownSortEvents=function(){var e;return!0!==("undefined"!=typeof _adp&&null!==_adp?_adp.hasBoundSortDisables:void 0)&&($("paper-dropdown-menu#binned-by paper-listbox").on("iron-select",function(){return e.debounce(50,null,null,this)}),$("paper-dropdown-menu#binned-by paper-listbox > paper-item").click(function(){return e.debounce(50,null,null,$(this).parents("paper-listbox"))}),_adp.hasBoundSortDisabled=!0),e=function(e){var a,t,n,o,r,s,l,i,c,d,p;for(o=p$(e).selectedItem,console.log("Firing doSortDisables",o,e),n=$(o).text().trim().toLowerCase(),l=0,r=!1,i=0,c=(d=$("paper-dropdown-menu#sort-by paper-listbox paper-item")).length;i<c;i++){if(s=d[i],t=null!=(p=$(s).attr("data-bins"))?p:"",a=t.split(","),console.log("Searching allowed bins for '"+n+"'",a,s),indexOf.call(a,n)>=0){try{p$(s).disabled=!1}catch(e){}$(s).removeAttr("disabled"),r=!0}else{try{p$(s).disabled=!0}catch(e){}$(s).attr("disabled","disabled")}r||l++}return p$("paper-dropdown-menu#sort-by paper-listbox").selected=l,!1},console.log("Dropdown sort events bound"),!1},popShowRangeMap=function(e,a){var t,n,o;if("object"!=typeof e)return!1;if(isNull(e.genus)||isNull(e.species))try{e={genus:$(e).attr("data-genus"),species:$(e).attr("data-species")},isNull(a)&&(a=$(e).attr("data-kml"))}catch(e){}return isNull(e.genus)||isNull(e.species)?(toastStatusMessage("Unable to show range map"),!1):(n="https://mol.org/species/map/",t={embed:"true"},o='<paper-dialog modal id="species-range-map" class="pop-map dashboard-map" data-taxon-genus="'+e.genus+'" data-taxon-species="'+e.species+'">\n  <h2>Range map for <span class="genus">'+e.genus+'</span> <span class="species">'+e.species+'</span></h2>\n  <paper-dialog-scrollable>\n    <iframe class="mol-embed" src="'+n+e.genus.toTitleCase()+"_"+e.species+"?"+buildQuery(t)+'"></iframe>\n  <google-map\n    api-key="'+gMapsApiKey+'"\n    kml="'+a+'"\n    map-type="hybrid">\n    </google-map>\n  </paper-dialog-scrollable>\n  <div class="buttons">\n    <paper-button dialog-dismiss>Close</paper-button>\n  </div>\n</paper-dialog>',$("#species-range-map").remove(),$("body").append(o),$("#species-range-map").on("iron-overlay-opened",function(){var e;return console.debug("Opened"),e=$(this).find("paper-dialog-scrollable").height(),$(this).find("paper-dialog-scrollable > div#scrollable").css("max-height",e+"px").css("height",e+"px"),console.debug($(this).width(),$(this).height(),e),!1}),p$("#species-range-map").open(),!0)},$(function(){return console.log("Loaded dashboard"),getServerChart(),$("#generate-chart").click(function(){return renderNewChart.debounce(50)}),delayPolymerBind("paper-dropdown-menu#binned-by",function(){return $(".chart-param paper-listbox").on("iron-select",function(){return console.log("Firing iron-select event",this),renderNewChart.debounce(50)}),$(".chart-param paper-listbox paper-item").on("click",function(){return console.log("Firing click event on paper-item",this),renderNewChart.debounce(50)}),$("#diseasetested-select").on("selected-item-changed",function(){return console.log("Firing selection change"),renderNewChart.debounce(50)}),dropdownSortEvents()}),!1});
//# sourceMappingURL=dashboard.min.js.map