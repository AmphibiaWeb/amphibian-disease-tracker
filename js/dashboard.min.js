var adminApiTarget,apiTarget,createChart,createOverflowMenu,dashboardDisclaimer,dropdownSortEvents,fetchMiniTaxonBlurb,fetchMiniTaxonBlurbs,getRandomDataColor,getServerChart,popShowRangeMap,renderNewChart,indexOf=[].indexOf||function(e){for(var a=0,t=this.length;a<t;a++)if(a in this&&this[a]===e)return a;return-1};apiTarget=uri.urlString+"api.php",adminApiTarget=uri.urlString+"admin-api.php",window._adp={taxonCharts:{}};try{(createOverflowMenu=function(){return checkLoggedIn(function(e){var a,t;return a=e.status?'    <paper-item data-href="'+uri.urlString+'admin" class="click">\n  <iron-icon icon="icons:settings-applications"></iron-icon>\n  Account Settings\n</paper-item>\n<paper-item data-href="'+uri.urlString+'admin-login.php?q=logout" class="click">\n  <span class="glyphicon glyphicon-log-out"></span>\n  Log Out\n</paper-item>':"",t='<paper-menu-button id="header-overflow-menu" vertical-align="bottom" horizontal-offset="-15" horizontal-align="right" vertical-offset="30">\n  <paper-icon-button icon="icons:more-vert" class="dropdown-trigger"></paper-icon-button>\n  <paper-menu class="dropdown-content">\n    '+a+'\n    <paper-item data-href="'+uri.urlString+'dashboard.php" class="click">\n      Data Dashboard\n    </paper-item>\n    <paper-item data-href="https://amphibian-disease-tracker.readthedocs.org" class="click">\n      <iron-icon icon="icons:chrome-reader-mode"></iron-icon>\n      Documentation\n    </paper-item>\n    <paper-item data-href="https://github.com/AmphibiaWeb/amphibian-disease-tracker" class="click">\n      <iron-icon icon="glyphicon-social:github"></iron-icon>\n      Github\n    </paper-item>\n    <paper-item data-href="'+uri.urlString+'about.php" class="click">\n      About / Legal\n    </paper-item>\n  </paper-menu>\n</paper-menu-button>',$("#header-overflow-menu").remove(),$("header#header-bar .logo-container + p").append(t),isNull(a)||$("header#header-bar paper-icon-button[icon='icons:settings-applications']").remove(),bindClicks()}),!1})()}catch(e){}createChart=function(e,a,t,n,o){var r,s,l,i,c,d,p,u,h,g;if(null==t&&(t=!1),null==n&&(n="main"),"object"!=typeof a)return console.error("Can't create a chart without a data object"),!1;if("function"==typeof t&&isNull(o)&&(o=t,t=!1),u={label:"Sample Data",data:[65,59,80,81,56,55,40],borderWidth:1,borderColor:["rgba(255,99,132,1)","rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)","rgba(75, 192, 192, 1)","rgba(153, 102, 255, 1)","rgba(255, 159, 64, 1)"],backgroundColor:["rgba(255, 99, 132, 0.2)","rgba(54, 162, 235, 0.2)","rgba(255, 206, 86, 0.2)","rgba(75, 192, 192, 0.2)","rgba(153, 102, 255, 0.2)","rgba(255, 159, 64, 0.2)"]},g=[u],h={labels:["January","February","March","April","May","June","July"],datasets:g},isNull(a.data)&&(c=a,console.warn("No data for chart, will use sample data",c)),null==a.data&&(a.data=h),null==a.type&&(a.type="bar"),"object"!=typeof a.options&&(a.options={responsive:!0,scales:{yAxes:[{ticks:{beginAtZero:!0}}]}}),$(e).exists())console.log("Canvas already exists:",e);else{console.log("Creating new canvas"),i="#"===e.slice(0,1)?e.slice(1):"dataChart-"+$("canvas").length,(r=document.createElement("canvas")).setAttribute("class","chart dynamic-chart col-xs-12"),r.setAttribute("id",i);try{_adp.newCanvas=r}catch(e){}document.querySelector(n).appendChild(r)}if(null!=(null!=(d=_adp.chart)?d.chart:void 0)&&_adp.chart.chart.destroy(),l=$(e),isNull(l))try{console.log("trying again to make context"),l=$(r)}catch(e){}try{"object"!=typeof(null!=(p=a.options)?p.customCallbacks:void 0)&&(a.options.customCallbacks={})}catch(e){}return s=new Chart(l,a),_adp.chart={chart:s,ctx:l},console.info("Chart created with",a),"function"==typeof o&&o(),s},getRandomDataColor=function(){var e;return e="rgba("+randomInt(0,255)+","+randomInt(0,255)+","+randomInt(0,255),{border:e+",1)",background:e+",0.2)"}},getServerChart=function(e,a){var t,n,o,r,s;null==e&&(e="location"),startLoad();try{$("#post-species-summary").remove()}catch(e){}if(t="action=chart&bin="+e,"object"==typeof a){n=[];for(o in a)r=a[o],n.push(o+"="+r);t+="&"+n.join("&")}try{$("#diseasetested-select").exists()&&(s=p$("#diseasetested-select").selectedItem.name,isNull(s)||(t+="&disease="+s))}catch(e){}return console.debug("Fetching chart with",apiTarget+"?"+t),$.post(apiTarget,t,"json").done(function(n){var o,r,s,l,i,c,d,p,u,h,g;if(!1===n.status)return console.error("Server had a problem fetching chart data - "+n.human_error),console.warn(n),stopLoadError(n.human_error),!1;for(console.debug("Fetched chart",n),o=n.data,l=Object.toArray(o.datasets),i=0,c=0,d=l.length;c<d;c++){if(s=l[c],s.data=Object.toArray(s.data),console.log("examine data",s),null==s.borderWidth&&(s.borderWidth=1),null==s.backgroundColor)for(s.borderColor=[],s.backgroundColor=[],0,u=0,p=(g=s.data).length;u<p;u++)g[u],"PosNeg"===s.stack?(-1!==s.label.toLowerCase().search("positive")&&(r={border:"rgba(220,30,25,1)",background:"rgba(220,30,25,0.2)"}),-1!==s.label.toLowerCase().search("negative")&&(r={border:"rgba(25,70,220,1)",background:"rgba(25,70,220,0.2)"})):"totals"===s.stack?-1!==s.label.toLowerCase().search("total")&&(r={border:"rgba(25,200,90,1)",background:"rgba(25,200,90,0.2)"}):r=getRandomDataColor(),s.borderColor.push(r.border),s.backgroundColor.push(r.background),0;l[i]=s,++i}switch(n.use_preprocessor){case"geocoder":console.log("Got results",n),h=function(e){var a,t,n,r,c,d,p,u,h,g,b,m,f,y,v,w,x,C,$,k,_,A,S,D;for(console.log("Starting geocoder preprocessor",l),t=0,g=[],r=[],c={},i=0,D=!1,_=[],y=0,b=l.length;y<b;y++){for(d=l[y],s=d.data,console.log("Data blob",s),D||(!1,n=i,u=0,h=0),p=0,v=0,m=s.length;v<m;v++){if(C=s[v],++p,!isNull(C.points)){for(console.debug("Using pointset",C),a={points:[],title:S=C.title,project:$=C.project_id},t=0,console.log("Looking at project #"+$+", '"+S+"'"),w=0,f=(k=Object.toArray(C.points)).length;w<f;w++){x=k[w];try{A=canonicalizePoint(x),a.points.push(A),t++}catch(e){}}if(0===t){console.log("Skipping project #"+$+" = '"+S+"' with no points");continue}u++,80,localityFromMapBuilder(a,function(a,t){var s,p,b,m,f,y,v;h++;try{for(m=0,b=(v=null!=(f=t.views)?f:geo.geocoderViews).length;m<b;m++)y=v[m],indexOf.call(y.types,"country")<0||(p=y.formatted_address)}catch(e){p="Multiple Countries"}if(isNull(p)&&(p=a),console.log("Final locality '"+p+"' for "+t.title),indexOf.call(g,p)<0?(g.push(p),c[p]=r.length,r.push(1)):(s=c[p],r[s]++),h===u&&(d.data=r,l[n]=d,h=0,u=0,D=!1,i===l.length))return o.labels=g,e()})}p===s.length&&(!0,D=!0)}_.push(++i)}return _};break;default:h=function(e){return e()}}return h(function(){var r,i,c,d,p,u,h,g,b,m,f,y,v,w,x,C;if(r={labels:Object.toArray(o.labels),datasets:l},i={data:r,type:null!=(p=o.type)?p:"bar"},isNull(o.stacking))try{null==i.options&&(i.options={scales:{xAxes:[{scaleLabel:{}}],yAxes:[{scaleLabel:{}}]}}),null!=n.title&&(i.options.title={display:!0,text:n.title}),null!=(u=i.options)&&null!=(h=u.scales)&&null!=(g=h.xAxes)&&null!=(b=g[0])&&(b.scaleLabel={labelString:n.axes.x,display:!0}),null!=(m=i.options)&&null!=(f=m.scales)&&null!=(y=f.yAxes)&&null!=(v=y[0])&&(v.scaleLabel={labelString:n.axes.y,display:!0})}catch(e){d=e,console.warn("Couldn't set up redundant options - "+d.message),console.warn(d.stack)}else i.options={scales:{xAxes:[{scaleLabel:{labelString:n.axes.x,display:!0},stacked:o.stacking.x}],yAxes:[{scaleLabel:{labelString:n.axes.y,display:!0},stacked:o.stacking.y}]}},null!=n.title&&(i.options.title={display:!0,text:n.title});try{w=function(a,t){switch(e){case"species":return"Click to view the taxon data";default:return"Click to view the taxon breakdown"}},i.options.tooltips={callbacks:{afterLabel:w}}}catch(e){d=e,console.error("Couldn't custom label tooltips! "+d.message),console.warn(d.stack)}try{x=r.labels.join(","+JSON.stringify(r.datasets))}catch(e){try{x=r.labels.join(",")}catch(e){x="BAD_STRINGIFY"}}return C=md5(x),c="#dataChart-"+l[0].label.replace(/ /g,"-")+"-"+C,console.log("Creating chart with",c,i),createChart(c,i,function(){var d,p,u,h,g,b,m,f,y,v,w,x;if(isNull(n.full_description)||$("#chart-"+l[0].label.replace(" ","-")).before("<h3 class='col-xs-12 text-center chart-title'>"+n.full_description+"</h3>"),"species"===e){for(h={},p="",y=0,b=(v=r.labels).length;y<b;y++)d=v[y],isNull(d)||(p+='<div class="col-xs-12 col-md-6 col-lg-4">\n  <button type="button" class="btn btn-default collapse-trigger" data-target="#'+(x=md5(d+"-"+Date.now()))+'" id="'+x+'-button-trigger" data-taxon="'+d+'">\n  '+d+'\n  </button>\n  <iron-collapse id="'+x+'" data-bin="'+a.sort+'" data-taxon="'+d+'" class="taxon-collapse">\n    <div class="collapse-content alert">\n      Binned data for '+d+". Should populate this asynchronously ....\n    </div>\n  </iron-collapse>\n</div>",h[x]=d);"species"===a.sort?w=(f=m="species")+" Summaries":(m="genera",f="genus",w="Species Summaries by Genus"),g='<section id="post-species-summary" class="col-xs-12" style="margin-top:2rem;">\n  <div class="row">\n    <a href="'+(u=_adp.chart.chart.toBase64Image())+'" class="btn btn-primary pull-right col-xs-8 col-sm-4 col-md-3 col-lg-2" id="download-main-chart" download disabled>\n      <iron-icon icon="icons:cloud-download"></iron-icon>\n      Download Chart\n    </a>\n  </div>\n  <p hidden>\n    These data are generated from over '+n.rows+" "+m+". AND MORE SUMMARY BLAHDEYBLAH. Per "+f+' summary links, etc.\n  </p>\n  <div class="row">\n    <h3 class="capitalize col-xs-12">'+w+' <small class="text-muted">Ordered as the above chart</small></h3>\n    <p class="col-xs-12 text-muted">Click on a taxon to toggle charts and more data for that taxon</p>\n    '+p+"\n  </div>\n</section>";try{$("#post-species-summary").remove()}catch(e){}$(c).after(g),delay(750,function(){return u=_adp.chart.chart.toBase64Image(),$("#download-main-chart").attr("href",u).removeAttr("disabled")});try{bindCollapsors(),_adp.fetchUpdatesFor=h,delay(250,function(){return fetchMiniTaxonBlurbs()})}catch(e){}return _adp.chart.ctx.click(function(e){var a,t,n,o,r;return t=_adp.chart.chart.getDatasetAtEvent(e),o=_adp.chart.chart.getElementAtEvent(e),console.debug("Dataset",t),console.debug("Element",o),n=o[0]._index,s=t[n],console.debug("Specific data:",s),r=s._model.label,console.debug("Taxon clicked:",r),getRandomDataColor(),a="button[data-taxon='"+r+"']",console.debug("Selector test",a,$(a).exists()),$(".success-glow").removeClass("success-glow"),$(a).addClass("success-glow").get(0).scrollIntoView(!1)})}if("location"===e)return _adp.chart.ctx.click(function(e){var a,n,r,l;return n=_adp.chart.chart.getDatasetAtEvent(e),l=_adp.chart.chart.getElementAtEvent(e),console.debug("Dataset",n),console.debug("Element",l),r=l[0]._index,s=n[r],console.debug("Specific data:",s),a=s._model.label,console.debug("country clicked:",a),t={async:!0,action:"country_taxon",country:a},$.get("dashboard.php",buildQuery(t,"json")).done(function(e){var t,n,r,s,l,d,p;if(console.debug("Got country result",e),e.status){console.log("Should build out new chart here"),i={type:"bar",options:{responsive:!0,title:{display:!0,text:"Taxa in "+a},scales:{xAxes:[{scaleLabel:{labelString:"Taxa",display:!0}}],yAxes:[{scaleLabel:{labelString:"Sample Count",display:!0},stacked:!0}]}}},s={label:"Positive Samples",data:[],borderColor:"rgba(220,30,25,1)",backgroundColor:"rgba(220,30,25,0.3)",borderWidth:1,stack:"pnSamples"},r={label:"Negative Samples",data:[],borderColor:"rgba(25,70,220,1)",backgroundColor:"rgba(25,70,220,0.3)",borderWidth:1,stack:"pnSamples"},n=[],l=e.data;for(d in l)p=l[d],r.data.push(toInt(p.false)),s.data.push(toInt(p.true)),n.push(d);o={labels:n,datasets:[s,r]},i.data=o,console.log("Using chart data",i),C=JSON.stringify(o),c="#locale-zoom-chart",t=$(c),$(c).attr("data-uid",C),null!=_adp.zoomChart&&_adp.zoomChart.destroy(),_adp.zoomChart=new Chart(t,i)}return!1}),!1})}),stopLoad()}),!1}).fail(function(e,a){return console.error("AJAX error",e,a),stopLoadError("There was a problem communicating with the server"),!1}),!1},dashboardDisclaimer=function(e){var a,t,n;return null==e&&(e="main > h2 .badge"),t=!1,n="dashboard-disclaimer-popover",(a=function(e,a){var o;if(!t){if(!$(a).exists())return console.error("Invalid element to append disclaimer info to!"),!1;o='<paper-icon-button icon="icons:info" data-placement="right" title="Please wait..." id="'+n+'">\n</paper-icon-button>',$(a).after(o),$("#"+n).tooltip(),t=!0}return"function"==typeof e&&($("#"+n).removeAttr("data-toggle").tooltip("destroy"),delay(100,function(){return e("#"+n)})),!1})(void 0,e),checkLoggedIn(function(e){var t;return console.debug("CLI callback"),t=!0===e.status?'Data aggregated here are only for publicly available data sets, and those you have permissions to view. There may be samples in the disease repository for which the Principal Investigator(s) has marked as Private, and you lack permissions to view. These are never available in the Dashboard.\n<br/><br/>\nIf you wish to view the data as a member of the public, please either log out or view this page in a "Private Browsing" or "Incognito" mode.':"Data aggregated here are only for publicly available data sets. There may be samples in the disease repository for which the Principal Investigator(s) has marked as Private. These are never available in the Dashboard.",a(function(e){return null==e&&(e=n),console.debug("AIB callback for '"+e+"'",$(e)),$(e).tooltip("destroy").attr("data-toggle","popover").attr("title","Data Disclaimer").popover({content:t}),console.debug("popover bound"),!1}),_adp.appendInfoButton=a,console.log(t),!1}),!1},fetchMiniTaxonBlurbs=function(e){var a,t,n,o,r,s;null==e&&(e=_adp.fetchUpdatesFor),console.debug("Binding / setting up taxa updates for",e),_adp.collapseOpener=function(e){if(e.opened){if(Date.now()-_adp.lastOpened<1e3)return!1;e.hide()}else _adp.lastOpened=Date.now(),e.show();return!1};for(a in e){o=e[a],n="#"+a+" .collapse-content";try{r=o.split(" ")}catch(e){continue}s={genus:r[0],species:null!=(t=r[1])?t:""},$("button#"+a+"-button-trigger").attr("data-taxon",o).click(function(){var e,a,t,l;return o=$(this).attr("data-taxon"),r=o.split(" "),s={genus:r[0],species:null!=(t=r[1])?t:""},n=$(this).parent().find(".collapse-content"),(null!=(l=$(this).attr("data-has-data"))&&l).toBool()?console.debug("Already has data"):($(this).attr("data-has-data","true"),a="<paper-spinner active></paper-spinner> Fetching Data...",$(n).html(a),fetchMiniTaxonBlurb(s,n)),e=$(this).parent().find("iron-collapse").get(0),delay(250,function(a){return function(){return console.debug("is opened?",e.opened),e.opened?($("#post-species-summary").addClass("has-open-collapse"),$(a).parent().addClass("is-open")):($("#post-species-summary").removeClass("has-open-collapse"),$(".is-open").removeClass("is-open"))}}(this))})}return!1},fetchMiniTaxonBlurb=function(e,a,t){var n,o,r;null==t&&(t=!1),n=["action=taxon"];for(o in e)r=e[o],n.push(o+"="+encodeURIComponent(r));return $.get("api.php",n.join("&"),"json").done(function(e){var t,n,o,r,s,l,i,c,d,p,u,h,g,b,m,f,y,v,w,x,C,k,_,A,S,D,F,E,L,N,B,T,j,O,I,M,R,P,z,G,J,U,W,q,H,V,Y,K,Q;if(console.log("Got result",e),!0!==e.status)return b='<div class="alert alert-danger">\n  <p>\n    <strong>Error:</strong> Couldn\'t fetch taxon data\n  </p>\n</div>',$(a).html(b),!1;if($(a).html(""),e.isGenusLookup)for(y=[],v=0,w=(I=Object.toArray(e.taxa)).length;v<w;v++)W=I[v],y.push(W.data);else y=[e];for(j=[],A=0,x=y.length;A<x;A++){H=y[A];try{console.log("Doing blurb for",JSON.stringify(H.taxon));try{if("object"!=typeof H.amphibiaweb.data.common_name)throw{message:"NOT_OBJECT"};for(L=Object.toArray(H.amphibiaweb.data.common_name),E="",m=0,S=0,C=L.length;S<C;S++)++m,(D=L[S])===H.iucn.data.main_common_name&&(D="<strong>"+D.trim()+"</strong>"),E+=D.trim(),L.length!==m&&(E+=", ")}catch(e){g=e,"string"==typeof H.amphibiaweb.data.common_name?E=H.amphibiaweb.data.common_name:(E=null!=(M=null!=(R=H.iucn)&&null!=(P=R.data)?P.main_common_name:void 0)?M:"",console.warn("Couldn't create common name string! "+g.message),console.warn(g.stack),console.debug(H.amphibiaweb.data))}F=isNull(E)?"":"<p>\n  <strong>Names:</strong> "+E+"\n</p>",d='<p>Sampled in the following countries:</p>\n<ul class="country-list">\n  <li>'+Object.toArray(H.adp.countries).join("</li><li>")+"</li>\n</ul>",_="<div class='clade-project-summary'>\n  <p>Represented in <strong>"+H.adp.project_count+"</strong> projects with <strong>"+H.adp.samples+"</strong> samples:</p>",z=H.adp.projects;for(O in z)Q=K=z[O],!0!==noDefaultRender&&K.length>30&&(K=K.slice(0,27)+"..."),_+='<a class="btn btn-primary newwindow project-button-link" href="'+uri.urlString+"/project.php?id="+O+'" data-toggle="tooltip" title="'+Q+'">\n  '+K+"\n</a>";_+="</div>",0===H.adp.samples&&(_="<p>There are no samples of this taxon in our database.</p>",d=""),V=e.isGenusLookup||!0===noDefaultRender?"<p style='display:inline-block'>\n  <strong>Taxon:</strong> "+('<span class="sciname">\n  <span class="genus">'+H.taxon.genus+'</span>\n  <span class="species">'+H.taxon.species+"</span>\n</span>")+"\n</p>":"",f=(f=encode64(JSON.stringify(H.taxon))).replace(/[^\w0-9]/gim,""),console.log("Appended blurb for idTaxon",f),console.debug("Taxon data:",H,null!=(G=H.amphibiaweb)?G.map:void 0),t="<div class='blurb-info' id=\"taxon-blurb-"+f+'">\n  '+V+'\n  <div style=\'display:inline-block\'>\n    <paper-icon-button\n      icon="maps:satellite"\n      onclick="popShowRangeMap(this)"\n      data-genus="'+H.taxon.genus+'"\n      data-kml="'+(null!=(J=H.amphibiaweb)&&null!=(U=J.map)?U.shapefile:void 0)+'"\n      data-species="'+H.taxon.species+'"\n      data-toggle="tooltip"\n      title="View Range Map"\n      data-placement="right">\n    </paper-icon-button>\n  </div>\n  <p>\n    <strong>IUCN Status:</strong> '+H.iucn.category+"\n  </p>\n  "+F+"\n  "+d+'\n  <div class="charts-container row">\n  </div>\n  '+_+'\n  <div class="aweb-link-species click" data-href="http://amphibiaweb.org/cgi/amphib_query?rel-genus=equals&rel-species=equals&where-genus='+H.taxon.genus.toTitleCase()+"&where-species="+H.taxon.species+'" data-newtab="true">\n    <span class="sciname">\n      '+H.taxon.genus.toTitleCase()+" "+H.taxon.species+'\n    </span> on AmphibiaWeb\n    <iron-icon icon="icons:open-in-new"></iron-icon>\n  </div>\n</div>';try{if(-1!==H.taxon.species.search(/sp\./)){q={blurb:t,taxonData:H,idTaxon:f,targetSelector:a},j.push(q);continue}}catch(e){}$(a).append(t),bindClicks(),formatScientificNames(".aweb-link-species .sciname"),0===H.adp.samples&&(stopLoad(),delay(1e3,function(){return stopLoad()})),h=H.adp.disease_data;for(u in h)(p=h[u]).detected.no_confidence!==p.detected.total&&(s={type:"pie",data:{labels:[u+" detected",u+" not detected",u+" inconclusive data"],datasets:[{data:[p.detected.true,p.detected.false,p.detected.no_confidence],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]}},(n=document.createElement("canvas")).setAttribute("class","chart dynamic-pie-chart"),r=f+"-"+u+"-testdata",n.setAttribute("id",r),o=r+"-container",l=$(a).find("#taxon-blurb-"+f).find(".charts-container").get(0),c='<div id="'+o+'" class="col-xs-6">\n</div>',$(l).append(c),$("#"+o).get(0).appendChild(n),i=$("#"+r),T=new Chart(i,s),_adp.taxonCharts[r]=T,stopLoad()),p.fatal.unknown!==p.fatal.total&&(s={type:"pie",data:{labels:[u+" fatal",u+" not fatal",u+" unknown fatality"],datasets:[{data:[p.fatal.true,p.fatal.false,p.fatal.unknown],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]}},(n=document.createElement("canvas")).setAttribute("class","chart dynamic-pie-chart"),r=f+"-"+u+"-fataldata",n.setAttribute("id",r),o=r+"-container",l=$(a).find(".charts-container").get(0),c='<div id="'+o+'" class="col-xs-6">\n</div>',$(l).append(c),$("#"+o).get(0).appendChild(n),i=$("#"+r),T=new Chart(i,s),_adp.taxonCharts[r]=T,stopLoad())}catch(e){g=e;try{Y="",Y='for\n  <span class="sciname">\n    <span class="genus">'+H.taxon.genus+'</span>\n    <span class="species">'+H.taxon.species+"</span>\n  </span>"}catch(e){}b='<div class="alert alert-danger">\n  <p>\n    <strong>Error:</strong> Couldn\'t fetch taxon data '+Y+"\n  </p>\n</div>",$(a).append(b),console.error("Couldn't get taxon data -- "+g.message,H),console.warn(g.stack),stopLoadError()}}if(j.length>0){for(console.log("Have "+j.length+" unidentified species"),B=0,k=j.length;B<k;B++){N=j[B];try{a=N.targetSelector,f=N.idTaxon,H=N.taxonData,t=N.blurb,$(a).append(t),h=H.adp.disease_data;for(u in h)(p=h[u]).detected.no_confidence!==p.detected.total&&(s={type:"pie",data:{labels:[u+" detected",u+" not detected",u+" inconclusive data"],datasets:[{data:[p.detected.true,p.detected.false,p.detected.no_confidence],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]}},(n=document.createElement("canvas")).setAttribute("class","chart dynamic-pie-chart"),r=f+"-"+u+"-testdata",n.setAttribute("id",r),o=r+"-container",l=$(a).find("#taxon-blurb-"+f).find(".charts-container").get(0),c='<div id="'+o+'" class="col-xs-6">\n</div>',$(l).append(c),$("#"+o).get(0).appendChild(n),i=$("#"+r),T=new Chart(i,s),_adp.taxonCharts[r]=T,stopLoad()),p.fatal.unknown!==p.fatal.total&&(s={type:"pie",data:{labels:[u+" fatal",u+" not fatal",u+" unknown fatality"],datasets:[{data:[p.fatal.true,p.fatal.false,p.fatal.unknown],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]}},(n=document.createElement("canvas")).setAttribute("class","chart dynamic-pie-chart"),r=f+"-"+u+"-fataldata",n.setAttribute("id",r),o=r+"-container",l=$(a).find(".charts-container").get(0),c='<div id="'+o+'" class="col-xs-6">\n</div>',$(l).append(c),$("#"+o).get(0).appendChild(n),i=$("#"+r),T=new Chart(i,s),_adp.taxonCharts[r]=T,stopLoad())}catch(e){}}stopLoad(),delay(1e3,function(){return console.debug("Doing 1s delayed stopLoad"),stopLoad()})}return!1}).error(function(e,t){var n;return n='<div class="alert alert-danger">\n  <p>\n    <strong>Error:</strong> Server error fetching taxon data ()\n  </p>\n</div>',$(a).html(n),console.error("Couldn't fetch taxon data from server"),console.warn(e,t),stopLoadError(),!1}),!1},renderNewChart=function(){var e,a,t,n,o,r,s,l,i;try{null!=_adp.zoomChart&&_adp.zoomChart.destroy()}catch(e){}for(e={},o=0,r=(l=$(".chart-param")).length;o<r;o++){s=l[o],n=$(s).attr("data-key").replace(" ","-");try{if(null==p$(s).checked)throw"Not Toggle";e[n]=p$(s).checked}catch(a){t=$(p$(s).selectedItem).attr("data-value"),isNull(t)&&(t=p$(s).selectedItemLabel.toLowerCase().replace(" ","-")),e[n]=t}}return $(".chart.dynamic-chart").remove(),$(".chart-title").remove(),a=null!=(i=e.bin)?i:"location",delete e.bin,console.info("Going to generate a new chart with the following options",e),getServerChart(a,e),e},dropdownSortEvents=function(){var e;return!0!==("undefined"!=typeof _adp&&null!==_adp?_adp.hasBoundSortDisables:void 0)&&($("paper-dropdown-menu#binned-by paper-listbox").on("iron-select",function(){return e.debounce(50,null,null,this)}),$("paper-dropdown-menu#binned-by paper-listbox > paper-item").click(function(){return e.debounce(50,null,null,$(this).parents("paper-listbox"))}),_adp.hasBoundSortDisabled=!0),e=function(e){var a,t,n,o,r,s,l,i,c,d,p,u;for(o=p$(e).selectedItem,console.log("Firing doSortDisables",o,e),i=$(o).attr("data-value"),isNull(i)&&(i=$(o).text().trim().toLowerCase()),n=i,l=0,r=!1,c=0,d=(p=$("paper-dropdown-menu#sort-by paper-listbox paper-item")).length;c<d;c++){if(s=p[c],t=null!=(u=$(s).attr("data-bins"))?u:"",a=t.split(","),console.log("Searching allowed bins for '"+n+"'",a,s),indexOf.call(a,n)>=0){try{p$(s).disabled=!1}catch(e){}$(s).removeAttr("disabled"),r=!0}else{try{p$(s).disabled=!0}catch(e){}$(s).attr("disabled","disabled")}r||l++}return p$("paper-dropdown-menu#sort-by paper-listbox").selected=l,!1},console.log("Dropdown sort events bound"),!1},popShowRangeMap=function(e,a){var t,n,o,r,s,l;if("object"!=typeof e)return!1;if(n=e,isNull(e.genus)||isNull(e.species))try{r=$(e).attr("data-genus"),l=$(e).attr("data-species"),isNull(a)&&(a=$(e).attr("data-kml")),e={genus:r,species:l}}catch(e){}if(isNull(e.genus)||isNull(e.species))return toastStatusMessage("Unable to show range map"),!1;if(isNull(a)){try{a=$(n).attr("data-kml")}catch(e){}isNull(a)&&console.warn("Unable to read KML attr and none passed")}return o="https://mol.org/species/map/",t={embed:"true"},s='<paper-dialog modal id="species-range-map" class="pop-map dashboard-map" data-taxon-genus="'+e.genus+'" data-taxon-species="'+e.species+'">\n  <h2>Range map for <span class="genus">'+e.genus+'</span> <span class="species">'+e.species+'</span></h2>\n  <paper-dialog-scrollable>\n    \x3c!-- <iframe class="mol-embed" src="'+o+e.genus.toTitleCase()+"_"+e.species+"?"+buildQuery(t)+'"></iframe> --\x3e\n  <google-map\n    api-key="'+gMapsApiKey+'"\n    kml="'+a+'"\n    map-type="hybrid">\n    </google-map>\n  </paper-dialog-scrollable>\n  <div class="buttons">\n    <paper-button dialog-dismiss>Close</paper-button>\n  </div>\n</paper-dialog>',$("#species-range-map").remove(),$("body").append(s),$("#species-range-map").on("iron-overlay-opened",function(){var e;return console.debug("Opened"),e=$(this).find("paper-dialog-scrollable").height(),$(this).find("paper-dialog-scrollable > div#scrollable").css("max-height",e+"px").css("height",e+"px"),console.debug($(this).width(),$(this).height(),e),!1}),p$("#species-range-map").open(),!0},$(function(){console.log("Loaded dashboard");try{isNull(window.noDefaultRender)&&(window.noDefaultRender=!1)}catch(e){window.noDefaultRender=!1}return console.debug("NDR state",window.noDefaultRender),!0!==window.noDefaultRender&&getServerChart(),$("#generate-chart").click(function(){return renderNewChart.debounce(50)}),delayPolymerBind("paper-dropdown-menu#binned-by",function(){return $(".chart-param paper-listbox").on("iron-select",function(){return console.log("Firing iron-select event",this),renderNewChart.debounce(50)}),$(".chart-param paper-listbox paper-item").on("click",function(){return console.log("Firing click event on paper-item",this),renderNewChart.debounce(50)}),$("#diseasetested-select").on("selected-item-changed",function(){return console.log("Firing selection change"),renderNewChart.debounce(50)}),dropdownSortEvents()}),!1});
//# sourceMappingURL=dashboard.min.js.map