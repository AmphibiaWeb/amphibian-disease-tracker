var adminApiTarget,apiTarget,createChart,createOverflowMenu,dropdownSortEvents,fetchMiniTaxonBlurb,fetchMiniTaxonBlurbs,getRandomDataColor,getServerChart,renderNewChart,indexOf=[].indexOf||function(a){for(var b=0,c=this.length;b<c;b++)if(b in this&&this[b]===a)return b;return-1};apiTarget=uri.urlString+"api.php",adminApiTarget=uri.urlString+"admin-api.php",window._adp={taxonCharts:{}};try{(createOverflowMenu=function(){return checkLoggedIn(function(a){var b,c;return b=a.status?'    <paper-item data-href="'+uri.urlString+'admin" class="click">\n  <iron-icon icon="icons:settings-applications"></iron-icon>\n  Account Settings\n</paper-item>\n<paper-item data-href="'+uri.urlString+'admin-login.php?q=logout" class="click">\n  <span class="glyphicon glyphicon-log-out"></span>\n  Log Out\n</paper-item>':"",c='<paper-menu-button id="header-overflow-menu" vertical-align="bottom" horizontal-offset="-15" horizontal-align="right" vertical-offset="30">\n  <paper-icon-button icon="icons:more-vert" class="dropdown-trigger"></paper-icon-button>\n  <paper-menu class="dropdown-content">\n    '+b+'\n    <paper-item data-href="'+uri.urlString+'/dashboard.php" class="click">\n      Data Dashboard\n    </paper-item>\n    <paper-item data-href="https://amphibian-disease-tracker.readthedocs.org" class="click">\n      <iron-icon icon="icons:chrome-reader-mode"></iron-icon>\n      Documentation\n    </paper-item>\n    <paper-item data-href="https://github.com/AmphibiaWeb/amphibian-disease-tracker" class="click">\n      <iron-icon icon="glyphicon-social:github"></iron-icon>\n      Github\n    </paper-item>\n    <paper-item data-href="'+uri.urlString+'about.php" class="click">\n      About / Legal\n    </paper-item>\n  </paper-menu>\n</paper-menu-button>',$("#header-overflow-menu").remove(),$("header#header-bar .logo-container + p").append(c),isNull(b)||$("header#header-bar paper-icon-button[icon='icons:settings-applications']").remove(),bindClicks()}),!1})()}catch(a){}createChart=function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n;if(null==c&&(c=!1),null==d&&(d="main"),"object"!=typeof b)return console.error("Can't create a chart without a data object"),!1;if("function"==typeof c&&isNull(e)&&(e=c,c=!1),l={label:"Sample Data",data:[65,59,80,81,56,55,40],borderWidth:1,borderColor:["rgba(255,99,132,1)","rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)","rgba(75, 192, 192, 1)","rgba(153, 102, 255, 1)","rgba(255, 159, 64, 1)"],backgroundColor:["rgba(255, 99, 132, 0.2)","rgba(54, 162, 235, 0.2)","rgba(255, 206, 86, 0.2)","rgba(75, 192, 192, 0.2)","rgba(153, 102, 255, 0.2)","rgba(255, 159, 64, 0.2)"]},n=[l],m={labels:["January","February","March","April","May","June","July"],datasets:n},isNull(b.data)&&(j=b,console.warn("No data for chart, will use sample data",j)),null==b.data&&(b.data=m),null==b.type&&(b.type="bar"),"object"!=typeof b.options&&(b.options={responsive:!0,scales:{yAxes:[{ticks:{beginAtZero:!0}}]}}),$(a).exists())console.log("Canvas already exists:",a);else{console.log("Creating new canvas"),i="#"===a.slice(0,1)?a.slice(1):"dataChart-"+$("canvas").length,f=document.createElement("canvas"),f.setAttribute("class","chart dynamic-chart col-xs-12"),f.setAttribute("id",i);try{_adp.newCanvas=f}catch(a){}document.querySelector(d).appendChild(f)}if(null!=(null!=(k=_adp.chart)?k.chart:void 0)&&_adp.chart.chart.destroy(),h=$(a),isNull(h))try{console.log("trying again to make context"),h=$(f)}catch(a){}return g=new Chart(h,b),_adp.chart={chart:g,ctx:h},console.info("Chart created with",b),"function"==typeof e&&e(),g},getRandomDataColor=function(){var a;return a="rgba("+randomInt(0,255)+","+randomInt(0,255)+","+randomInt(0,255),{border:a+",1)",background:a+",0.2)"}},getServerChart=function(a,b){var c,d,e,f;if(null==a&&(a="location"),startLoad(),c="action=chart&bin="+a,"object"==typeof b){d=[];for(e in b)f=b[e],d.push(e+"="+f);c+="&"+d.join("&")}return console.debug("Fetching chart with",apiTarget+"?"+c),$.post(apiTarget,c,"json").done(function(c){var d,e,f,g,h,i,j,k,l,m,n,o;if(!1===c.status)return console.error("Server had a problem fetching chart data - "+c.human_error),console.warn(c),stopLoadError(c.human_error),!1;for(console.debug("Fetched chart",c),d=c.data,g=Object.toArray(d.datasets),h=0,i=0,j=g.length;i<j;i++){if(f=g[i],f.data=Object.toArray(f.data),console.log("examine data",f),null==f.borderWidth&&(f.borderWidth=1),null==f.backgroundColor)for(f.borderColor=[],f.backgroundColor=[],o=0,n=f.data,l=0,k=n.length;l<k;l++)n[l],"PosNeg"===f.stack?(-1!==f.label.toLowerCase().search("positive")&&(e={border:"rgba(220,30,25,1)",background:"rgba(220,30,25,0.2)"}),-1!==f.label.toLowerCase().search("negative")&&(e={border:"rgba(25,70,220,1)",background:"rgba(25,70,220,0.2)"})):"totals"===f.stack?-1!==f.label.toLowerCase().search("total")&&(e={border:"rgba(25,200,90,1)",background:"rgba(25,200,90,0.2)"}):e=getRandomDataColor(),f.borderColor.push(e.border),f.backgroundColor.push(e.background),++o;g[h]=f,++h}switch(c.use_preprocessor){case"geocoder":console.log("Got results",c),m=function(a){var b,c,e,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C;for(console.log("Starting geocoder preprocessor",g),c=0,o=[],i=[],j={},h=0,C=!1,z=[],s=0,p=g.length;s<p;s++){for(k=g[s],f=k.data,console.log("Data blob",f),C||(!1,e=h,m=0,n=0),l=0,t=0,q=f.length;t<q;t++){if(w=f[t],++l,!isNull(w.points)){for(console.debug("Using pointset",w),B=w.title,x=w.project_id,b={points:[],title:B,project:x},c=0,console.log("Looking at project #"+x+", '"+B+"'"),y=Object.toArray(w.points),u=0,r=y.length;u<r;u++){v=y[u];try{A=canonicalizePoint(v),b.points.push(A),c++}catch(a){}}if(0===c){console.log("Skipping project #"+x+" = '"+B+"' with no points");continue}m++,80,localityFromMapBuilder(b,function(b,c){var f,l,p,q,r,s,t;n++;try{for(t=null!=(r=c.views)?r:geo.geocoderViews,q=0,p=t.length;q<p;q++)s=t[q],indexOf.call(s.types,"country")<0||(l=s.formatted_address)}catch(a){l="Multiple Countries"}if(isNull(l)&&(l=b),console.log("Final locality '"+l+"' for "+c.title),indexOf.call(o,l)<0?(o.push(l),j[l]=i.length,i.push(1)):(f=j[l],i[f]++),n===m&&(k.data=i,g[e]=k,n=0,m=0,C=!1,h===g.length))return d.labels=o,a()})}l===f.length&&(!0,C=!0)}z.push(++h)}return z};break;default:m=function(a){return a()}}return m(function(){var e,h,i,j,k,l,m,n,o,p,q,r,s,t,u;if(e={labels:Object.toArray(d.labels),datasets:g},h={data:e,type:null!=(k=d.type)?k:"bar"},isNull(d.stacking))try{null==h.options&&(h.options={scales:{xAxes:[{scaleLabel:{}}],yAxes:[{scaleLabel:{}}]}}),null!=c.title&&(h.options.title={display:!0,text:c.title}),null!=(l=h.options)&&null!=(m=l.scales)&&null!=(n=m.xAxes)&&null!=(o=n[0])&&(o.scaleLabel={labelString:c.axes.x,display:!0}),null!=(p=h.options)&&null!=(q=p.scales)&&null!=(r=q.yAxes)&&null!=(s=r[0])&&(s.scaleLabel={labelString:c.axes.y,display:!0})}catch(a){j=a,console.warn("Couldn't set up redundant options - "+j.message),console.warn(j.stack)}else h.options={scales:{xAxes:[{scaleLabel:{labelString:c.axes.x,display:!0},stacked:d.stacking.x}],yAxes:[{scaleLabel:{labelString:c.axes.y,display:!0},stacked:d.stacking.y}]}},null!=c.title&&(h.options.title={display:!0,text:c.title});try{t=e.labels.join(","+JSON.stringify(e.datasets))}catch(a){try{t=e.labels.join(",")}catch(a){t="BAD_STRINGIFY"}}return u=md5(t),i="#dataChart-"+g[0].label.replace(/ /g,"-")+"-"+u,console.log("Creating chart with",i,h),createChart(i,h,function(){var d,h,j,k,l,m,n,o,p,q;if(isNull(c.full_description)||$("#chart-"+g[0].label.replace(" ","-")).before("<h3 class='col-xs-12 text-center chart-title'>"+c.full_description+"</h3>"),"species"===a){for(j={},h="",p=e.labels,o=0,l=p.length;o<l;o++)d=p[o],q=md5(d+"-"+Date.now()),h+='<div class="col-xs-12 col-md-6 col-lg-4">\n  <button type="button" class="btn btn-default collapse-trigger" data-target="#'+q+'" id="'+q+'-button-trigger">\n  '+d+'\n  </button>\n  <iron-collapse id="'+q+'" data-bin="'+b.sort+'" data-taxon="'+d+'">\n    <div class="collapse-content alert">\n      Binned data for '+d+". Should populate this asynchronously ....\n    </div>\n  </iron-collapse>\n</div>",j[q]=d;"species"===b.sort?(m="species",n=m):(m="genera",n="genus"),k='<section id="post-species-summary" class="col-xs-12">\n  <p>\n    These data are generated from over '+c.rows+" "+m+". AND MORE SUMMARY BLAHDEYBLAH. Per "+n+' summary links, etc.\n  </p>\n  <div class="row">\n    <h3 class="capitalize">'+n+" Summaries</h3>\n    "+h+"\n  </div>\n</section>";try{$("#post-species-summary").remove()}catch(a){}$(i).after(k);try{bindCollapsors(),_adp.fetchUpdatesFor=j,delay(250,function(){return fetchMiniTaxonBlurbs()})}catch(a){}return _adp.chart.ctx.click(function(a){var b,c,d,e,g;return c=_adp.chart.chart.getDatasetAtEvent(a),e=_adp.chart.chart.getElementAtEvent(a),console.debug("Dataset",c),console.debug("Element",e),d=e[0]._index,f=c[d],console.debug("Specific data:",f),g=f._model.label,console.debug("Taxon clicked:",g),getRandomDataColor(),b="button[data-taxon='"+g+"']",console.debug("Selector",b,$(b).exists()),$(".success-glow").removeClass("success-glow"),$(b).addClass("success-glow").get(0).scrollIntoView(!1)})}}),stopLoad()}),!1}).fail(function(a,b){return console.error("AJAX error",a,b),stopLoadError("There was a problem communicating with the server"),!1}),!1},fetchMiniTaxonBlurbs=function(a){var b,c,d,e,f;null==a&&(a=_adp.fetchUpdatesFor),console.debug("Fetching taxa updates for",a),_adp.collapseOpener=function(a){if(a.opened){if(Date.now()-_adp.lastOpened<1e3)return!1;a.hide()}else _adp.lastOpened=Date.now(),a.show();return!1};for(b in a)d=a[b],c="#"+b+" .collapse-content",e=d.split(" "),f={genus:e[0],species:e[1]},$("button#"+b+"-button-trigger").attr("data-taxon",d).click(function(){var a,b,g,h;return d=$(this).attr("data-taxon"),e=d.split(" "),f={genus:e[0],species:e[1]},c=$(this).parent().find(".collapse-content"),b=null!=(h=$(this).attr("data-has-data"))&&h,b.toBool()?console.debug("Already has data"):($(this).attr("data-has-data","true"),g="<paper-spinner active></paper-spinner> Fetching Data...",$(c).html(g),fetchMiniTaxonBlurb(f,c)),a=$(this).parent().find("iron-collapse").get(0),console.debug("is opened?",a.opened)});return!1},fetchMiniTaxonBlurb=function(a,b,c){var d,e,f;null==c&&(c=!1),d=["action=taxon"];for(e in a)f=a[e],d.push(e+"="+encodeURIComponent(f));return $.get("api.php",d.join("&"),"json").done(function(c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J;console.log("Got result",c);try{if("object"!=typeof c.amphibiaweb.data.common_name)throw{message:"NOT_OBJECT"};for(A=Object.toArray(c.amphibiaweb.data.common_name),z="",s=0,u=0,v=A.length;u<v;u++)x=A[u],++s,x===c.iucn.data.main_common_name&&(x="<strong>"+x.trim()+"</strong>"),z+=x.trim(),A.length!==s&&(z+=", ")}catch(a){q=a,"string"==typeof c.amphibiaweb.data.common_name?z=c.amphibiaweb.data.common_name:(z=null!=(D=null!=(E=c.iucn)&&null!=(F=E.data)?F.main_common_name:void 0)?D:"",console.warn("Couldn't create common name string! "+q.message),console.warn(q.stack),console.debug(c.amphibiaweb.data))}y=isNull(z)?"":"<p>\n  <strong>Names:</strong> "+z+"\n</p>",l=Object.toArray(c.adp.countries),m='<ul class="country-list">\n  <li>'+l.join("</li><li>")+"</li>\n</ul>",w="<div class='clade-project-summary'>\n  <p>Represented in <strong>"+c.adp.project_count+"</strong> projects with <strong>"+c.adp.samples+"</strong> samples</p>",G=c.adp.projects;for(C in G)I=G[C],J=I,I.length>30&&(I=I.slice(0,27)+"..."),w+='<a class="btn btn-primary newwindow project-button-link" href="'+uri.urlString+"/project.php?id="+C+'" data-toggle="tooltip" title="'+J+'">\n  '+I+"\n</a>";w+="</div>",d="<div class='blurb-info'>\n  <p>\n    <strong>IUCN Status:</strong> "+c.iucn.category+"\n  </p>\n  "+y+"\n  <p>Sampled in the following countries:</p>\n  "+m+"\n  "+w+'\n  <div class="charts-container row">\n  </div>\n</div>',$(b).html(d),t=encode64(JSON.stringify(a)),t=t.replace(/[^\w0-9]/gim,""),p=c.adp.disease_data;for(o in p)n=p[o],n.detected.no_confidence!==n.detected.total&&(H={labels:[o+" detected",o+" not detected",o+" inconclusive data"],datasets:[{data:[n.detected.true,n.detected.false,n.detected.no_confidence],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]},h={type:"pie",data:H},e=document.createElement("canvas"),e.setAttribute("class","chart dynamic-pie-chart"),g=t+"-"+o+"-testdata",e.setAttribute("id",g),f=g+"-container",i=$(b).find(".charts-container").get(0),k='<div id="'+f+'" class="col-xs-6">\n</div>',$(i).append(k),$("#"+f).get(0).appendChild(e),j=$("#"+g),B=new Chart(j,h),_adp.taxonCharts[g]=B),n.fatal.unknown!==n.fatal.total&&(r={labels:[o+" fatal",o+" not fatal",o+" unknown fatality"],datasets:[{data:[n.fatal.true,n.fatal.false,n.fatal.unknown],backgroundColor:["#FF6384","#36A2EB","#FFCE56"],hoverBackgroundColor:["#FF6384","#36A2EB","#FFCE56"]}]},h={type:"pie",data:r},e=document.createElement("canvas"),e.setAttribute("class","chart dynamic-pie-chart"),g=t+"-"+o+"-fataldata",e.setAttribute("id",g),f=g+"-container",i=$(b).find(".charts-container").get(0),k='<div id="'+f+'" class="col-xs-6">\n</div>',$(i).append(k),$("#"+f).get(0).appendChild(e),j=$("#"+g),B=new Chart(j,h),_adp.taxonCharts[g]=B);return!1}),!1},renderNewChart=function(){var a,b,c,d,e,f,g,h;for(a={},g=$(".chart-param"),d=0,e=g.length;d<e;d++){f=g[d],c=$(f).attr("data-key").replace(" ","-");try{if(null==p$(f).checked)throw"Not Toggle";a[c]=p$(f).checked}catch(b){a[c]=p$(f).selectedItemLabel.toLowerCase().replace(" ","-")}}return $(".chart.dynamic-chart").remove(),$(".chart-title").remove(),b=null!=(h=a.bin)?h:"location",delete a.bin,console.info("Going to generate a new chart with the following options",a),getServerChart(b,a),a},dropdownSortEvents=function(){var a;return!0!==("undefined"!=typeof _adp&&null!==_adp?_adp.hasBoundSortDisables:void 0)&&($("paper-dropdown-menu#binned-by paper-listbox").on("iron-select",function(){return a.debounce(50,null,null,this)}),$("paper-dropdown-menu#binned-by paper-listbox > paper-item").click(function(){return a.debounce(50,null,null,$(this).parents("paper-listbox"))}),_adp.hasBoundSortDisabled=!0),a=function(a){var b,c,d,e,f,g,h,i,j,k,l;for(e=p$(a).selectedItem,console.log("Firing doSortDisables",e,a),d=$(e).text().trim().toLowerCase(),h=0,f=!1,k=$("paper-dropdown-menu#sort-by paper-listbox paper-item"),i=0,j=k.length;i<j;i++){if(g=k[i],c=null!=(l=$(g).attr("data-bins"))?l:"",b=c.split(","),console.log("Searching allowed bins for '"+d+"'",b,g),indexOf.call(b,d)>=0){try{p$(g).disabled=!1}catch(a){}$(g).removeAttr("disabled"),f=!0}else{try{p$(g).disabled=!0}catch(a){}$(g).attr("disabled","disabled")}f||h++}return p$("paper-dropdown-menu#sort-by paper-listbox").selected=h,!1},console.log("Dropdown sort events bound"),!1},$(function(){return console.log("Loaded dashboard"),getServerChart(),$("#generate-chart").click(function(){return renderNewChart.debounce(50)}),delayPolymerBind("paper-dropdown-menu#binned-by",function(){return $(".chart-param paper-listbox").on("iron-select",function(){return console.log("Firing iron-select event",this),renderNewChart.debounce(50)}),$(".chart-param paper-listbox paper-item").on("click",function(){return console.log("Firing click event on paper-item",this),renderNewChart.debounce(50)}),dropdownSortEvents()}),!1});
//# sourceMappingURL=dashboard.min.js.map