var checkArkDataset,checkProjectAuthorization,copyLink,createOverflowMenu,disableMapViewFilter,fillSorterWithDropdown,kmlLoader,paginationBinder,postAuthorizeRender,prepParsedDataDownload,publicData,renderEmail,renderMapWithData,renderPublicMap,restrictProjectsToMapView,searchProjects,setPublicData,showCitation,showEmailField,sqlQueryBox,indexOf=[].indexOf||function(e){for(var t=0,o=this.length;t<o;t++)if(t in this&&this[t]===e)return t;return-1};_adp.mapRendered=!1,_adp.zcClient=null,publicData=null;try{(createOverflowMenu=function(){return checkLoggedIn(function(e){var t,o;return o='<paper-menu-button id="header-overflow-menu" vertical-align="bottom" horizontal-offset="-15" horizontal-align="right" vertical-offset="30">\n  <paper-icon-button icon="icons:more-vert" class="dropdown-trigger"></paper-icon-button>\n  <paper-menu class="dropdown-content">\n    '+(t=e.status?'    <paper-item data-href="https://amphibiandisease.org/admin" class="click">\n  <iron-icon icon="icons:settings-applications"></iron-icon>\n  Account Settings\n</paper-item>\n<paper-item data-href="https://amphibiandisease.org/admin-login.php?q=logout" class="click">\n  <span class="glyphicon glyphicon-log-out"></span>\n  Log Out\n</paper-item>':"")+'\n    <paper-item data-href="'+uri.urlString+'dashboard.php" class="click">\n      <iron-icon icon="icons:donut-small"></iron-icon>\n      Data Dashboard\n    </paper-item>\n    <paper-item data-href="https://amphibian-disease-tracker.readthedocs.org" class="click">\n      <iron-icon icon="icons:chrome-reader-mode"></iron-icon>\n      Documentation\n    </paper-item>\n    <paper-item data-href="https://github.com/AmphibiaWeb/amphibian-disease-tracker" class="click">\n      <iron-icon icon="glyphicon-social:github"></iron-icon>\n      Github\n    </paper-item>\n    <paper-item data-href="https://amphibiandisease.org/about.php" class="click">\n      About / Legal\n    </paper-item>\n  </paper-menu>\n</paper-menu-button>',$("#header-overflow-menu").remove(),$("header#header-bar .logo-container + p").append(o),isNull(t)||$("header#header-bar paper-icon-button[icon='icons:settings-applications']").remove(),bindClicks()}),!1})()}catch(e){}fillSorterWithDropdown=function(e){var t,o,n,a,r,i,l,s,c;for(r in null==e&&(e=".sort-by-placeholder-text"),c={date:{title:"sampling date",key:"date"},affiliation:{title:"affiliation",key:"affiliation"},lab:{title:"PI lab",key:"lab"},contact:{title:"PI contact",key:"contact"}},i=$(e).attr("data-order-key"),o="",s=a=0,c)(t=c[r]).key===i&&(s=a),++a,o+='<paper-item data-sort-key="'+t.key+'">'+t.title+"</paper-item>";return n='<paper-dropdown-menu label="Sort Options" id="sort-options">\n  <paper-listbox class="dropdown-content" selected="'+s+'">\n    '+o+"\n  </paper-listbox>\n</paper-dropdown-menu>",$(e).replaceWith(n),l=0,$("#sort-options").on("iron-select",function(){var e,t;return e=p$(this).selectedItem,t=$(e).attr("data-sort-key"),console.debug("Selected '"+t+"'"),0<l&&goTo("https://"+uri.domain+".org/project.php?sort="+t),++l}),!1},checkProjectAuthorization=function(n,a){return null==n&&(n=_adp.projectId),null==a&&(a=postAuthorizeRender),startLoad(),console.info("Checking authorization for "+n),checkLoggedIn(function(e){var t,o;return null==n?(e.status?(console.info("Logged in user, no project"),'<paper-icon-button icon="icons:dashboard" class="authorized-action" id="show-actions" data-href="'+uri.urlString+'admin-page.html" data-toggle="tooltip" title="Administration Dashboard"> </paper-icon-button>'):console.info("Not logged in"),stopLoad(),!1):e.status?(o=uri.urlString+"admin-api.php",t="perform=check_access&project="+n,$.post(o,t,"json").done(function(e){var t;return e.status?(console.info("User is authorized"),t=e.detail.project,"function"==typeof a?a(t,e.detailed_authorization):(console.warn("No callback specified!"),console.info("Got project data",t))):console.info("User is unauthorized")}).fail(function(e,t){return console.log("Error checking server",e,t)}).always(function(){return stopLoad()})):(console.info("Non logged-in user or unauthorized user"),renderPublicMap(),stopLoad(),!1)}),!1},renderEmail=function(e){var t,o;return animateLoad(),o=uri.urlString+"api.php",t="action=is_human&recaptcha_response="+e+"&project="+_adp.projectId,$.post(o,t,"json").done(function(e){var t,o,n,a;return console.info("Checked response"),console.log(e),t=e.author_data,showEmailField(t.contact_email),isNull(null!=(n=e.technical)?n.name:void 0)||isNull(null!=(a=e.technical)?a.email:void 0)||(o="Technical Contact "+e.technical.name,showEmailField(e.technical.email,o,"technical-email-send")),stopLoad()}).fail(function(e,t){return stopLoadError("Sorry, there was a problem getting the contact email"),!1}),!1},showEmailField=function(e,t,o){var n,a,r;return null==t&&(t="Contact Email"),null==o&&(o="contact-email-send"),n='<div class="row appended-email-field">\n  <paper-input readonly class="col-xs-8 col-md-11" label="'+t+'" value="'+e+'"></paper-input>\n  <paper-fab icon="communication:email" class="click materialblue" id="'+o+'" data-href="mailto:'+e+'" data-toggle="tooltip" title="Send Email"></paper-fab>\n</div>',$("#email-fill").exists()?$("#email-fill").replaceWith(n):(a=$(".appended-email-field").length-1,r=$(".appended-email-field").get(a),$(r).after(n)),bindClicks("#"+o),!1},renderMapWithData=function(B,e){var t,F,o,n,a,r,i,l,s,c,p,Z,J,d,u,g,V,K,h,m,f,b,W,y,U,w,v,j,G,Q,k,H,_;if(null==e&&(e=!1),G=function(){try{if(!isNull(B.transect_file))return kmlLoader(B.transect_file,function(){return console.debug("Loaded KML file successfully")})}catch(e){}},!0===_adp.mapRendered&&!0!==e)return console.warn("Carto: The map was asked to be rendered again, but it has already been rendered!"),G(),!1;if("object"!=typeof(l=B.carto_id))try{r=JSON.parse(deEscape(l))}catch(e){d=(J=e).message;try{r=JSON.parse(l)}catch(e){if(J=e,511<l.length&&"object"==typeof(i=fixTruncatedJson(l))&&(console.debug("The carto data object was truncated, but rebuilt."),r=i),isNull(r))return console.error("cartoObj must be JSON string or obj, given",l),console.warn("Cleaned obj:",deEscape(l)),console.warn("Told '"+d+"' then",J.message),stopLoadError("Couldn't parse data"),!1}}else r=l;if(w=(_adp.cartoDataParsed=r).raw_data,isNull(w))return console.warn("No raw data to render"),G(),!1;if(w.hasDataFile&&(g="helpers/",-1===(u=w.filePath).search(g)&&(u=""+g+u),Z="",0<(n=B.dataset_arks.split(",")).length))for((a=u.split("/")).pop(),a=a.join("/"),h=K=0,f=n.length;h<f;h++)o=(p=(F=n[h]).split("::"))[0],u=a+"/"+p[1],Z+=V='<button class="btn btn-primary click download-file download-data-file '+(0===K?"":"btn-xs download-alt-datafile")+'" data-href="'+u+'" data-newtab="true" data-toggle="tooltip" title="'+o+' (right-click to copy)" data-ark="'+o+'">\n  <iron-icon icon="editor:insert-chart"></iron-icon>\n  '+(0===K?"Download Newest Datafile":o+" dataset")+"\n</button>",++K;if(null==Z&&(Z=""),c=r.table,isNull(c))return console.warn("WARNING: This project has no data associated with it. Not doing map render."),G(),!1;try{try{!1!==r.bounding_polygon.paths.toBool()||isNull(r.bounding_polygon.multibounds)||(r.bounding_polygon.paths=r.bounding_polygon.multibounds[0])}catch(e){}_=null!=(v=r.bounding_polygon.paths)?v:r.bounding_polygon,H=getMapZoom(_,"#transect-viewport"),console.info("Got zoom",H)}catch(e){H=""}for(U=r.bounding_polygon,(isArray(U)||null==(null!=U?U.paths:void 0))&&(U,"object"!=typeof(Q=toObject(U))&&(Q={}),Q.paths=U,isArray(Q.paths)||(Q.paths=[]),U=Q),null==U.fillColor&&(U.fillColor=defaultFillColor),null==U.fillOpacity&&(U.fillOpacity=defaultFillOpacity),W='<google-map-poly closed fill-color="'+U.fillColor+'" fill-opacity="'+U.fillOpacity+'" stroke-weight="1">',k=[],m=0,b=(j=U.paths).length;m<b;m++)y=j[m],indexOf.call(k,y)<0&&(k.push(y),W+='<google-map-point latitude="'+y.lat+'" longitude="'+y.lng+'"> </google-map-point>');return W+="    </google-map-poly>",console.info("Would ping cartodb with",s="SELECT genus, specificepithet, diseasetested, diseasedetected, originaltaxa, ST_asGeoJSON(the_geom) FROM "+c+";"),t="action=fetch&sql_query="+encodeURIComponent(encode64(s)),console.debug("Hitting endpoint for carto lookup",uri.urlString+"api.php?"+t),$.post("api.php",t,"json").done(function(e){var t,o,n,a,r,i,l,s,c,p,d,u,g,h,m,f,b,y,w,v,j,k,_,x,C,S,M,N,E,D,L,P,T,q,O,A,z,R,I;if(!0===_adp.mapRendered)return console.warn("Duplicate map render! Skipping thread"),G(),!1;if(console.info("Carto query got result:",e),!e.status)return null==(i=null!=(E=e.human_error)?E:e.error)&&(i="Unknown error"),stopLoadError("Sorry, we couldn't retrieve your information at the moment ("+i+")"),G(),!1;for(c in T=e.parsed_responses[0].rows,M=[],S=[],console.log("Running swapped cartoDB order (lng, lat)"),C={},T){P=T[c],p=(l=JSON.parse(P.st_asgeojson)).coordinates[1],m=l.coordinates[0],M.push([p,m]);try{S.push(canonicalizePoint([p,m]))}catch(e){}A=P.genus+" "+P.specificepithet,null==C[A]&&(C[A]={positive:!1,negative:!1,no_confidence:!1,counts:{total:0,positive:0,negative:0,no_confidence:0}}),P.diseasedetected=function(){switch(P.diseasedetected.toString().toLowerCase()){case"true":return C[A].positive=!0,C[A].counts.positive++,"positive";case"false":return C[A].negative=!0,C[A].counts.negative++,"negative";default:return C[A].no_confidence=!0,C[A].counts.no_confidence++,P.diseasedetected.toString()}}(),C[A].counts.total++,k="",A!==P.originaltaxa&&(k="(<em>"+P.originaltaxa+"</em>)"),y='<google-map-marker latitude="'+p+'" longitude="'+m+'" data-disease-detected="'+P.diseasedetected+'">\n  <p>\n    <em>'+P.genus+" "+P.specificepithet+"</em> "+k+"\n    <br/>\n    Tested <strong>"+P.diseasedetected+"</strong> for "+P.diseasetested+"\n  </p>\n</google-map-marker>","positive"!==P.diseasedetected&&"negative"!==P.diseasedetected&&(P.diseasedetected="inconclusive"),$(".aweb-link-species[data-species='"+P.genus+" "+P.specificepithet+"']").attr("data-"+P.diseasedetected,"true"),W+=y}if(null==(null!=U?U.paths:void 0))try{_adp.canonicalHull=createConvexHull(M,!0)}catch(e){}for(s='<google-map id="transect-viewport" latitude="'+B.lat+'" longitude="'+B.lng+'" map-type="hybrid" zoom="'+H+'" class="col-xs-12 col-md-9 col-lg-6" api-key="'+gMapsApiKey+'">\n  '+W+"\n</google-map>",v="",j=B.sampling_months.split(","),f=K=0,d=j.length;f<d;f++)w=j[f],1<++K&&K===j.length?(2<j.length&&(v+=","),v+=" and "):1<K&&(v+=", "),isNumber(w)&&(w=dateMonthToString(w)),v+=w;for(K=0,R="",I=B.sampling_years.split(","),_=K=0,u=I.length;_<u;_++)z=I[_],1<++K&&K===I.length?(2<I.length&&(R+=","),R+=" and "):1<K&&(R+=", "),R+=z;if(R=1===I.length?"the year "+R:"the years "+R,n=new Date(toInt(B.sampled_collection_start)),a=new Date(toInt(B.sampled_collection_end)),b=(b='<div class="row">\n  <h2 class="col-xs-12">Mapping Data</h2>\n  '+s+'\n  <div class="col-xs-12 col-md-3 col-lg-6">\n    <p class="text-muted"><span class="glyphicon glyphicon-calendar"></span> Data were taken from '+(dateMonthToString(n.getMonth())+" "+n.getFullYear()+" &#8212; "+dateMonthToString(a.getMonth())+" "+a.getFullYear())+'</p>\n    <p class="text-muted"><span class="glyphicon glyphicon-calendar"></span> Data were taken in '+v+'</p>\n    <p class="text-muted"><span class="glyphicon glyphicon-calendar"></span> Data were sampled in '+R+'</p>\n    <p class="text-muted"><iron-icon icon="icons:language"></iron-icon> The effective project center is at ('+roundNumberSigfig(B.lat,6)+", "+roundNumberSigfig(B.lng,6)+") with a sample radius of "+B.radius+"m and a resulting locality <strong class='locality'>"+B.locality+'</strong></p>\n    <p class="text-muted"><iron-icon icon="editor:insert-chart"></iron-icon> The dataset contains '+B.disease_positive+" positive samples ("+roundNumber(100*B.disease_positive/B.disease_samples)+"%), "+B.disease_negative+" negative samples ("+roundNumber(100*B.disease_negative/B.disease_samples)+"%), and "+B.disease_no_confidence+" inconclusive samples ("+roundNumber(100*B.disease_no_confidence/B.disease_samples)+'%)</p>\n    <div class="download-buttons" id="data-download-buttons">\n      '+Z+"\n    </div>\n  </div>\n</div>").replace(/NaN/gm,"0"),!0!==_adp.mapRendered&&($("#auth-block").append(b),setupMapMarkerToggles(),_adp.mapRendered=!0,!isNull(_adp.pageSpeciesList))){for(console.log("Creating CSV downloader for species list"),o=new Date,x={create:!0,downloadFile:"species-list-"+B.project_id+"-"+o.toISOString()+".csv",selector:".download-buttons",buttonText:"Download Species Stats",splitValues:" ",header:["Genus","Species","Subspecies","Positive Samples?","Negative Samples?","Inconclusive Samples?","Positive Count","Negative Count","Inconclusive Count","Totals"]},t=[],N=0,g=(D=_adp.pageSpeciesList).length;N<g;N++){if(q=D[N],(Q=q.split(x.splitValues)).length<3)for(;Q.length<3;)Q.push("");null!=C[q]?(Q.push(C[q].positive.toString()),Q.push(C[q].negative.toString()),Q.push(C[q].no_confidence.toString()),Q.push(C[q].counts.positive.toString()),Q.push(C[q].counts.negative.toString()),Q.push(C[q].counts.no_confidence.toString()),Q.push(C[q].counts.total.toString())):(console.warn("CSV downloader couldn't find "+q+" in perTaxaStatus"),window.perTaxaStatus=C),t.push(Q.join(x.splitValues))}downloadCSVFile(t,x)}for(bindClicks(".download-file"),sqlQueryBox(),$(".download-data-file").contextmenu(function(e){var n,a,t,o,r,i;return e.preventDefault(),console.log("Event details",e),$(this).offset(),V='<paper-material class="ark-context-wrapper" style="top:'+e.pageY+"px;left:"+e.pageX+'px;position:absolute">\n  <paper-menu class=context-menu">\n    <paper-item class="copy-ark-context">\n      Copy ARK to clipboard\n    </paper-item>\n  </paper-menu>\n</paper-material>',$(".ark-context-wrapper").remove(),$("body").append(V),getMapZoom(S,"#transect-viewport"),ZeroClipboard.config(_adp.zcConfig),i=new ZeroClipboard($(".copy-ark-context").get(0)),F=$(this).attr("data-ark"),n={dataType:"text/plain",data:r="http://biscicol.org/id/"+F,"text/plain":r},i.setData(n),i.on("aftercopy",function(e){return e.data["text/plain"]?toastStatusMessage("ARK resolver path copied to clipboard"):(console.error("ZeroClipboard had an error - ",e),console.warn(n),toastStatusMessage("Error copying to clipboard"))}),i.on("error",function(e){var t;return console.error("Initial error"),t=new ZeroClipboard($(".copy-ark-context").get(0)),a(t)}),a=function(t,e){var o;null==t&&(t=i),null==e&&(e=null);try{return o=new ClipboardEvent("copy",n),document.dispatchEvent(o),toastStatusMessage("ARK resolver path copied to clipboard"),!1}catch(e){console.error("Error creating copy: "+(J=e).message),console.warn(J.stack),console.warn("Can't use HTML5")}return t.setData(n),isNull(e)||e.setData(n),t.on("aftercopy",function(e){return e.data["text/plain"]?toastStatusMessage("ARK resolver path copied to clipboard"):(console.error("ZeroClipboard had an error - ",e),console.warn(n),toastStatusMessage("Error copying to clipboard"))}),t.on("error",function(e){if(console.error("Error copying to clipboard"),console.warn("Got",e),"flash-overdue"===e.name){if(!0===_adp.resetClipboard)return console.error("Resetting ZeroClipboard didn't work!"),!1;ZeroClipboard.on("ready",function(){return _adp.resetClipboard=!0,t=new ZeroClipboard($(".copy-ark-context").get(0)),a(t)})}if("flash-disabled"===e.name)return console.info("No flash on this system"),ZeroClipboard.destroy(),toastStatusMessage("Clipboard copying isn't available on your system")})},t=function(e){return $(this).addClass("iron-selected"),!1},o=function(e){return $(this).removeClass("iron-selected"),!1},this,$(".ark-context-wrapper paper-item").hover(t,o).click(function(){return _adp.resetClipboard=!1,$(".ark-context-wrapper").remove(),!1}).contextmenu(function(){return $(".ark-context-wrapper").remove(),!1}),!1}),checkArkDataset(B),setPublicData(B),O=0,h=(L=$(".aweb-link-species")).length;O<h;O++)r=L[O],$(r).attr("data-positive").toBool()&&$(r).attr("data-negative","false").attr("data-inconclusive","false");return console.info("Carto lookup complete"),G(),stopLoad()}).fail(function(e,t){return console.error("Couldn't render map and carto data"),console.error(e,t),G(),stopLoadError("Couldn't render map")}),!1},postAuthorizeRender=function(e,t){var o,n,a,r,i,l,s,c;e.public&&console.info("Project is already public, not rerendering"),startLoad(),console.info("Should render stuff",e),l="",t.can_edit&&(l='<paper-icon-button icon="icons:create" class="authorized-action" data-href="'+uri.urlString+"admin-page.html?id="+e.project_id+'" data-toggle="tooltip" title="Edit Project"></paper-icon-button>'),uri.urlString,$("#title").append(l),o=JSON.parse(e.author_data),showEmailField(o.contact_email);try{isNull(e.technical_contact)||isNull(e.technical_contact_email)||(c="Technical Contact "+e.technical_contact,showEmailField(e.technical_contact_email,c,"technical-email-send"))}catch(e){}if(bindClicks(".authorized-action"),"object"!=typeof(r=e.carto_id))try{n=JSON.parse(deEscape(r))}catch(e){s=(i=e).message;try{n=JSON.parse(r)}catch(e){if(i=e,511<r.length&&"object"==typeof(a=fixTruncatedJson(r))&&(console.debug("The carto data object was truncated, but rebuilt."),n=a),isNull(n))return console.error("cartoObj must be JSON string or obj, given",r),console.warn("Cleaned obj:",deEscape(r)),console.warn("Told '"+s+"' then",i.message),stopLoadError("Couldn't parse data"),!1}}else n=r;renderMapWithData(e);try{prepParsedDataDownload(e)}catch(e){}return!1},kmlLoader=function(o,n){var e,t,a,r;try{if("object"==typeof o)o=(t=o).path;else try{t=JSON.parse(o),o=t.path}catch(e){t={path:o}}console.debug("Loading KML file",o)}catch(e){}if(geo.inhibitKMLInit=!0,e=isNull("undefined"!=typeof _adp&&null!==_adp&&null!=(r=_adp.lastMod)?r.kml:void 0)?"js/kml.min.js":"js/kml.min.js?t="+_adp.lastMod.kml,startLoad(),!$("google-map").exists()){if(a='<div class="row">\n  <h2 class="col-xs-12">Mapping Data</h2>\n  '+('<google-map id="transect-viewport" class="col-xs-12 col-md-9 col-lg-6 kml-lazy-map" api-key="'+gMapsApiKey+'" map-type="hybrid">\n</google-map>')+"\n</div>",!$("#auth-block").exists())return console.warn("Couldn't find an authorization block to render the KML map in!"),!1;$("#auth-block").append(a),_adp.mapRendered=!0}return loadJS(e,function(){return initializeParser(null,function(){return loadKML(o,function(){var t,e;try{if(e=geo.kml.parser.docsByUrl[o],isNull(e)&&(o="/"+o,e=geo.kml.parser.docsByUrl[o],isNull(e)&&(console.warn("Could not resolve KML by url, using first doc"),e=geo.kml.parser.docs[0])),isNull(e))return allError("Bad KML provided"),!1;console.debug("Using parsed data from path '"+o+"'",e),"function"==typeof n?n(e):console.info("kmlHandler wasn't given a callback function"),stopLoad()}catch(e){t=e,allError("There was a importing the data from this KML file"),console.warn(t.message),console.warn(t.stack)}return!1}),!1}),!1}),!1},copyLink=function(e,t,o){var n,a,r,i,l;if(null==e&&(e=_adp.zcClient),null==o&&(o=!0),n=p$(".ark-identifier").value,o)try{return r={dataType:"text/plain",data:l="http://biscicol.org/id/"+n,"text/plain":l},a=new ClipboardEvent("copy",r),document.dispatchEvent(a),toastStatusMessage("ARK resolver path copied to clipboard"),!1}catch(e){console.error("Error creating copy: "+(i=e).message),console.warn(i.stack)}return console.warn("Can't use HTML5"),null!=e?(e.setData(r),null!=t&&t.setData(r),e.on("aftercopy",function(e){return e.data["text/plain"]?toastStatusMessage("ARK resolver path copied to clipboard"):toastStatusMessage("Error copying to clipboard")}),e.on("error",function(e){if(console.error("Error copying to clipboard"),console.warn("Got",e),"flash-overdue"===e.name){if(!0===_adp.resetClipboard)return console.error("Resetting ZeroClipboard didn't work!"),!1;ZeroClipboard.on("ready",function(){return _adp.resetClipboard=!0,copyLink()}),_adp.zcClient=new ZeroClipboard($("#copy-ark").get(0))}if("flash-disabled"===e.name)return console.info("No flash on this system"),ZeroClipboard.destroy(),$("#copy-ark").tooltip("destroy").remove(),$(".ark-identifier").removeClass("col-xs-9 col-md-11").addClass("col-xs-12"),toastStatusMessage("Clipboard copying isn't available on your system")})):console.error("Can't use HTML, and ZeroClipboard wasn't passed"),!1},searchProjects=function(){var e,t,o,b;return b=$("#project-search").val(),isNull(b)?$("google-map-poly").removeAttr("hidden"):(o=p$("#search-filter").selectedItem,t=$(o).attr("data-cols"),console.info("Searching on "+b+" ... in "+t),e="action=search_project&q="+b+"&cols="+t,$.post(uri.urlString+"api.php",e,"json").done(function(e){var t,o,n,a,r,i,l,s,c,p,d,u,g,h,m,f;if(console.info(e),t="",m=[],l=40,768<(d=$(window).width())&&d<1050?l=20:$(window).width()<1280&&(l=30),0<(p=Object.toArray(e.result)).length)for(n=0,r=p.length;n<r;n++)s=p[n],m.push(s.project_id),o=s.public.toBool()?'<iron-icon icon="social:public"></iron-icon>':'<iron-icon icon="icons:lock"></iron-icon>',h=s.project_title.slice(0,l),s.project_title!==h?(f=s.project_title,h+="..."):f="Project #"+s.project_id.slice(0,8)+"...",t+="<li class='project-search-result'>"+('<button class="btn btn-info search-proj-link" data-href="'+uri.urlString+"project.php?id="+s.project_id+'" data-toggle="tooltip" data-placement="top" title="'+f+'">\n  '+o+" "+h+"\n</button>")+"</li>";else t='<p><em>No results found for "<strong>'+(null!=(u=e.search)?u:b)+'</strong>"';for($("#project-result-container").html(t),bindClicks(".search-proj-link"),$("google-map-poly").attr("hidden","hidden"),g=[],a=0,i=m.length;a<i;a++)c=m[a],g.push($("google-map-poly[data-project='"+c+"']").removeAttr("hidden"));return g}).fail(function(e,t){return console.error(e,t)})),!1},setPublicData=function(e){return publicData=e,!1},renderPublicMap=function(t){var o,n,e,a,r,i,l,s,c,p,d,u;null==t&&(t=publicData);try{if(t.public.toBool())return console.info("Not rendering low-data public map for public project"),!1}catch(e){return console.error("Invalid project data passed!"),console.warn(t),!1}try{console.info("Working with limited data",t),null==(p=t.carto_id.bounding_polygon).fillColor&&(p.fillColor="#ff7800"),null==p.fillOpacity&&(p.fillOpacity=.35),l='<google-map-poly closed fill-color="'+p.fillColor+'" fill-opacity="'+p.fillOpacity+'" stroke-weight="1">',d=[],null==(o=getPointsFromBoundingBox(t))[0].lat&&(o=getCorners(o)),s=[{lat:o[0].lat,lng:o[0].lng},{lat:o[1].lat,lng:o[1].lng},{lat:o[2].lat,lng:o[2].lng},{lat:o[3].lat,lng:o[3].lng}];try{u=getMapZoom(o,"#transect-viewport"),console.info("Got public zoom",u)}catch(e){u=""}for(a=0,r=s.length;a<r;a++)c=s[a],indexOf.call(d,c)<0&&(d.push(c),l+='<google-map-point latitude="'+c.lat+'" longitude="'+c.lng+'"> </google-map-point>');l+="    </google-map-poly>",e='<div class="row" id="public-map">\n  <h2 class="col-xs-12">Project Area of Interest</h2>\n  <google-map id="transect-viewport" latitude="'+(i=getMapCenter(o)).lat+'" longitude="'+i.lng+'" map-type="hybrid" zoom="'+u+'" class="col-xs-12 col-md-9 col-lg-6 center-block clearfix public-fuzzy-map"  api-key="'+gMapsApiKey+'">\n        '+l+"\n  </google-map>\n</div>",$("#auth-block").append(e);try{return u=getMapZoom(s,"#transect-viewport"),p$("#transect-viewport").zoom=u}catch(e){e;try{return u=getMapZoom(o,"#transect-viewport"),p$("#transect-viewport").zoom=u}catch(e){}}}catch(e){return n=e,stopLoadError("Couldn't render map"),console.error("Map rendering error - "+n.message),console.warn(n.stack)}},checkArkDataset=function(e,t,o){var n,a,r,i,l,s,c,p,d,u,g,h,m,f,b,y;if(null==t&&(t=!1),null==o&&(o=!1),"undefined"!=typeof _adp&&null!==_adp||(window._adp={}),c=uri.o.attr("fragment").split(","),o||null==_adp.fragmentData){for(console.info("Examining fragment list"),i={},p=0,u=c.length;p<u;p++)i[(m=c[p].split(":"))[0]]=m[1];_adp.fragmentData=i}if(null==(s=null!=(f=_adp.fragmentData)?f.dataset:void 0))return!1;for(console.info("Checking  ARK identifiers for dataset "+s+" ..."),r="",h=!1,d=0,g=(a=e.dataset_arks.split(",")).length;d<g;d++)if(-1!==(n=a[d]).search(s)){r=n,h=!0;break}return!0!==h?(console.warn("Could not find matching dataset in",a),!1):(l=(i=r.split("::"))[1],console.info("Got matching identifier "+r+" -> "+l),b=".download-file[data-href*='"+l+"']",b=$(b).get(0),t?(y=$(b).attr("data-href"),openTab(y)):($(b).removeClass("btn-xs btn-primary").addClass("btn-success success-glow").click(function(){return $(this).removeClass("success-glow")}),{behavior:"smooth",block:"start"},$(b).get(0).scrollIntoView(!1)),b)},prepParsedDataDownload=function(e){var t,o,n,a,r,i,l,s,c,h;if(l=new Date,h={selector:"#data-download-buttons",create:!0,objectAsValues:!0,buttonText:"Download Parsed Dataset",downloadFile:"datalist-"+e.project_id+"-"+l.toISOString()+".csv"},{},"object"!=typeof(a=e.carto_id))try{o=JSON.parse(deEscape(a))}catch(e){c=(s=e).message;try{o=JSON.parse(a)}catch(e){if(s=e,511<a.length&&"object"==typeof(n=fixTruncatedJson(a))&&(console.debug("The carto data object was truncated, but rebuilt."),o=n),isNull(o))return console.error("cartoObj must be JSON string or obj, given",a),console.warn("Cleaned obj:",deEscape(a)),console.warn("Told '"+c+"' then",s.message),stopLoadError("Couldn't parse data"),!1}}else o=a;return i=o.table,isNull(i)?console.warn("WARNING: This project has no data associated with it. Not creating download."):(console.info("Would ping cartodb with",r="SELECT *, ST_asGeoJSON(the_geom) FROM "+i+";"),t="action=fetch&sql_query="+encodeURIComponent(encode64(r)),_adp.dataPoints=[],$.post("api.php",t,"json").done(function(e){var t,o,n,a,r,i,l,s,c,p,d,u,g;if(!e.status)return null==(a=null!=(d=e.human_error)?d:e.error)&&(a="Unknown error"),stopLoadError("Sorry, we couldn't retrieve your information at the moment ("+a+")"),!1;for(l in n=[],g=e.parsed_responses[0].rows){u=g[l],s=(i=JSON.parse(u.st_asgeojson)).coordinates[1],c=i.coordinates[0],p=canonicalizePoint({lat:s,lng:c}),_adp.dataPoints.push(p),u.decimalLatitude=s,u.decimalLongitude=c,delete u.st_asgeojson;try{try{r=JSON.parse(u.fimsextra)}catch(e){r=u.fimsextra}if("object"==typeof r){for(t in r)o=r[t],u[t]=o;delete u.fimsextra}}catch(e){}delete u.cartodb_id,delete u.id,delete u.the_geom,delete u.the_geom_webmercator,n.push(u)}return downloadCSVFile(n,h)}).fail(function(e,t){return console.error("Couldn't create"),console.error(e,t)})),!1},sqlQueryBox=function(){var o,e,n,a;return null==_adp.cartoDataParsed?console.error("CartoDB data not available. Are you logged in?"):(n=function(e){var t;return animateLoad(),console.info("Querying with"),console.log(e),t="action=fetch&sql_query="+post64(e),_adp.currentAsyncJqxhr=$.post("api.php",t,"json").done(function(e){var t,o,n,a,r,i,l,s,c;if(console.log(e),!0!==e.status)return t=null!=(i=null!=(l=e.human_error)?l:e.error)?i:"Unknown error",console.error(t),o=function(){switch(t){case"UNAUTHORIZED_QUERY_TYPE":return e.query_type;default:return"(no details for error "+e.error+")"}}(),$("#query-immediate-result").text(t+": "+o),$(".do-sql-query").removeAttr("disabled"),stopLoad(),!1;try{r=JSON.parse(e.post_response[0])}catch(e){return e,console.error("Error parsing result"),$("#query-immediate-result").text("Error parsing result from CartoDB"),$(".do-sql-query").removeAttr("disabled"),stopLoad(),!1}if(null!=r.error)return console.error("Error in result: "+r.error),$("#query-immediate-result").text(r.error),$(".do-sql-query").removeAttr("disabled"),stopLoad(),!1;for(n in console.log("Using responses",e.parsed_responses),a="",s=e.parsed_responses){c=s[n],a+="#"+(toInt(n)+1)+": ";try{a+='<code class="language-json">'+JSON.stringify(c.rows)+"</code>"}catch(e){a+="BAD QUERY"}a+="\n\n"}$("#query-immediate-result").html(a);try{Prism.highlightAll(!0)}catch(e){}return $(".do-sql-query").removeAttr("disabled"),stopLoad(),!1}).error(function(){return $("#query-immediate-result").text("Error executing query"),$(".do-sql-query").removeAttr("disabled"),stopLoadError()}),!1},o=function(e,t){var o;return null==t&&(t=!1),o=(o=e.trim().replace(/@@/gim,_adp.cartoDataParsed.table)).replace(/!@/gim,"SELECT * FROM "+_adp.cartoDataParsed.table),t||$("#query-input").val(o),o},$("#project-sql-query-box").exists()||(e='<div id="project-sql-query-box" class="row">\n  <h2 class="col-xs-12">Raw Project Queries</h2>\n  <textarea class="form-control code col-xs-10 col-xs-offset-1" rows="3" id="query-input" placeholder="SQL Query" aria-describedby="query-cheats"></textarea>\n  <div class="col-xs-12">\n    <label class="text-muted col-xs-2 col-md-1" for="interpreted-query">Real Query:</label>\n    <code class="language-sql col-xs-10 col-md-11" id="interpreted-query">\n    </code>\n  </div>\n  <div class="col-xs-12 col-sm-9">\n    <span class="text-muted" id="query-cheats">Tips: <ol><li>You\'re querying PostgreSQL</li><li>Type <kbd>@@</kbd> as a placeholder for the table name</li><li>Type <kbd>!@</kbd> as a placeholder for <code>SELECT * FROM @@</code></li><li>Multiple queries at once is just fine. They\'re broken at <kbd>);</kbd>, so enclosing your <code>WHERE</code> in parentheses is good enough.</li></ol></span>\n  </div>\n  <div class="col-xs-12 col-sm-3">\n    <button class="btn btn-default do-sql-query pull-right">Execute Query</button>\n  </div>\n  <h3 class="col-xs-12">Result:</h3>\n  <pre class="code col-xs-12" id="query-immediate-result"></pre>\n</div>',$("h2.project-identifier").exists()?$("h2.project-identifier").before(e):$("main").append(e)),a=function(){var e,t;return console.info("Executing query ..."),e=$("#query-input").val(),-1===(t=o(e)).search(_adp.cartoDataParsed.table)?(console.error("Query didn't specify a table!"),toastStatusMessage("You forgot to include the table identifier in your query."),!1):($(".do-sql-query").attr("disabled","disabled"),n(t))},$("#query-input").keyup(function(e){var t;if(13===(e.keyCode?e.keyCode:e.which)){try{e.preventDefault()}catch(e){}a()}else t=o($(this).val(),!0),$("code#interpreted-query").text(t),Prism.highlightElement($("code#interpreted-query")[0],!0);return!1}),$(".do-sql-query").click(function(){return a()})),!1},showCitation=function(){var e;return e=p$("paper-input[label='DOI']").value,$("#citation-pop").exists()?p$("#citation-pop").open():(animateLoad(),fetchCitation(e,function(t,e){var o,n;try{n=isNull(e)?"":'<paper-button class="click" data-newtab="true" data-href="'+e+'">\n  <iron-icon icon="icons:open-in-new"></iron-icon>\n  Open\n</paper-button>',o='<paper-dialog id="citation-pop" modal>\n  <h2>Citation</h2>\n  <paper-dialog-scrollable>\n    <div class="pop-contents">\n      <paper-textarea label="Citation" id="popped-citation" readonly>\n        '+t+'\n      </paper-textarea>\n    </div>\n  </paper-dialog-scrollable>\n  <div class="buttons">\n    <paper-button id="copy-citation" class="click-copy" data-copy-selector="#popped-citation">\n      <iron-icon icon="icons:content-copy"></iron-icon>\n      Copy Citation\n    </paper-button>\n    <paper-button id="copy-doi" class="click-copy" data-copy-selector="#doi-input">\n      <iron-icon icon="icons:content-copy"></iron-icon>\n      Copy DOI\n    </paper-button>\n    '+n+"\n    <paper-button dialog-dismiss>Close</paper-button>\n  </div>\n</paper-dialog>",$("body").append(o);try{p$("#popped-citation").value=t}catch(e){delay(500,function(){try{return p$("#popped-citation").value=t}catch(e){}})}return bindClicks(),bindCopyEvents(),safariDialogHelper("#citation-pop"),stopLoad()}catch(e){console.error("Couldn't show citation - "+e.message);try{return p$("#citation-pop").open()}catch(e){return stopLoadError("Failed to display citation")}}})),!1},window.showCitation=showCitation,disableMapViewFilter=function(){return $("google-map#community-map").unbind("google-map-idle"),_adp.hasBoundMapEvent=!1,$("nav#project-pagination").removeAttr("hidden"),!0},restrictProjectsToMapView=function(e){var t,o,n,a,r,i,l,s,c,p,d,u,g,h,m,f,b,y,w,v,j,k,_,x,C,S,M,N,E,D,L,P;if(null==e&&(e=!1),!$("google-map#community-map").exists())return!1;if(_adp.hasBoundMapEvent||(_adp.hasBoundMapEvent=!0,(L=function(t){return $("google-map#community-map").removeAttr("width"),delay(25,function(){var e;try{e=$("google-map#community-map").width(),$("google-map#community-map").attr("width",e+"px")}catch(e){}try{if("function"==typeof t)return t()}catch(e){}}),!1})(null),$("window").on("resize",function(){return L(function(){return restrictProjectsToMapView.debounce(50,null,null,e)}),!1}),$("google-map#community-map").on("google-map-idle",function(){return L(function(){return restrictProjectsToMapView.debounce(50,null,null,e)}),!1}),$("#projects-by-map-view").on("iron-change",function(){var e,t,o,n;for(t=0,o=(n=$(".map-view-control:not(.map-view-master)")).length;t<o;t++)e=n[t],p$(e).disabled=!p$(this).checked;return!1}),$(".map-view-control").on("iron-change",function(){return restrictProjectsToMapView.debounce(50,null,null,e),!1}),console.log("Bound events for RPTMV")),!p$("#projects-by-map-view").checked)return $("#project-list li").removeAttr("hidden"),$("h2.status-notice.project-list").removeAttr("hidden"),$("nav#project-pagination").removeAttr("hidden"),$("button.js-lazy-project").remove(),$("#map-view-title").remove(),!1;if($("nav#project-pagination").attr("hidden","hidden"),$("h2.status-notice.project-list").attr("hidden","hidden"),(o={north:(u=p$("google-map#community-map").map.getBounds()).getNorthEast().lat(),east:u.getNorthEast().lng(),south:u.getSouthWest().lat(),west:u.getSouthWest().lng()}).west>o.east&&(o.west=-180,o.east=180),P=[],p$("#show-dataless-projects").checked)for(r=0,l=(b=$("#project-list button")).length;r<l;r++){t=b[r];try{f=$(t).attr("data-project"),$(t).attr("data-has-locale").toBool()?console.debug(f+" has a locale, handling normally"):P.push(f)}catch(e){console.warn("Error checking button -- "+(n=e).message),console.warn(n.stack)}}for(i=0,s=(y=$("google-map#community-map").find("google-map-poly")).length;i<s;i++)if(m=y[i],f=$(m).attr("data-project"),!(0<=indexOf.call(P,f)||isNull(f))){try{if($("button[data-project='"+f+"']").exists()&&!0!==$("button[data-project='"+f+"']").attr("data-has-locale").toBool())continue}catch(e){}for(D={north:-90,south:90,east:-180,west:180},d=0,c=(k=$(m).find("google-map-point")).length;d<c;d++)h=k[d],p$(h).latitude>D.north&&(D.north=p$(h).latitude),p$(h).longitude>D.east&&(D.east=p$(h).longitude),p$(h).longitude<D.west&&(D.west=p$(h).longitude),p$(h).latitude<D.south&&(D.south=p$(h).latitude);!(a=!1)===e?(console.log("Checking edges of",f),o.south<(_=D.north)&&_<o.north&&(a=!0),o.south<(x=D.south)&&x<o.north&&(a=!0),o.west<(C=D.east)&&C<o.east&&(a=!0),o.west<(S=D.west)&&S<o.east&&(a=!0)):(console.log("Checking containement of",f),D.south>o.south&&D.north<o.north&&(o.west<(M=D.east)&&M<o.east||o.west<(N=D.west)&&N<o.east)&&(console.log("Project is wholly NS contained"),a=!0),D.west>o.west&&D.east<o.east&&(o.south<(E=D.north)&&E<o.north||o.south<(w=D.south)&&w<o.north)&&(console.log("Project is wholly EW contained"),a=!0)),a&&P.push(f)}for($("#project-list li").attr("hidden","hidden"),g=0,p=(v=$("#project-list button")).length;g<p;g++)t=v[g],j=$(t).attr("data-project"),0<=indexOf.call(P,j)&&$(t).parent("li").removeAttr("hidden");return $.get(uri.urlString+"admin-api.php","action=list","json").done(function(e){var t,o,n,a,r,i,l,s,c;for(n in console.log("Got project list",e),$("button.js-lazy-project").remove(),a=Object.toArray(e.public_projects),i=[],r=e.projects)s=r[n],0<=indexOf.call(P,n)?$("button[data-project='"+n+"']").exists()?i.push(console.log("Not re-adding button for",n)):(console.log("Should add visible project '"+s+"'",n),(l=s.slice(0,40))!==s?(c=s,l+="..."):c="Project #"+n.slice(0,8)+"...",o=0<=indexOf.call(a,n)?"social:public":"icons:lock",t='<li>\n<button class="js-lazy-project btn btn-primary" data-href="'+uri.urlString+"project.php?id="+n+'" data-project="'+n+'" data-toggle="tooltip" title="'+c+'">\n  <iron-icon icon="'+o+'"></iron-icon>\n  '+l+"\n</button>\n</li>",i.push($("#project-list").append(t))):i.push(console.log("Not adding invalid project",n));return i}).fail(function(e,t){return console.warn("Failed to get project list",e,t)}).always(function(){var e;return e='<h2 class="col-xs-12 status-notice hidden-xs project-list project-list-page map-view-title" id="map-view-title">\n  Showing '+$("#project-list button:visible").length+" projects in view\n</h2>",$("#map-view-title").remove(),$("h2.status-notice.project-list").before(e)}),console.log("Showing projects",P,"within",o),P},paginationBinder=function(){var p;return p="paper-dropdown-menu#pagination-selector-dropdown",$(p).exists()?delayPolymerBind(p,function(){var i,e,t,o,l,s,n,a,r,c;if(p$(p).disabled){for(i=null!=(n=uri.o.param("pagination"))?n:$("#project-list li button:not(.js-lazy-project)").length,i=toInt(i),c=!1,t=r=0,o=(a=$("paper-dropdown-menu#pagination-selector-dropdown paper-listbox.dropdown-content paper-item")).length;t<o;t++){s=a[t];try{l=toInt($(s).text().trim())}catch(e){e,l=10}if(l===i){c=!0;break}r++}c||(r=0),p$("paper-dropdown-menu#pagination-selector-dropdown paper-listbox.dropdown-content").selected=r,console.log("Pre-selected item",r)}return p$(p).disabled=!1,$("paper-dropdown-menu#pagination-selector-dropdown paper-listbox.dropdown-content").unbind("iron-select").on("iron-select",function(){return console.log("iron-select fired"),e.debounce(50,null,null,this)}),$("paper-dropdown-menu#pagination-selector-dropdown paper-listbox.dropdown-content paper-item").unbind("click").click(function(){return console.log("paper-item click event fired"),e.debounce(50,null,null,$(this).parent("paper-listbox"))}),!(e=function(e){var t,o,n,a,r;s=p$(e).selectedItem;try{l=toInt($(s).text().trim())}catch(e){console.warn("Unable to read pagination number -- "+e.message),l=10}return console.log("Dropdown selected paginator",l),n=null!=(a=uri.o.param("page"))?a:1,i=null!=(r=uri.o.param("pagination"))?r:$("#project-list li button:not(.js-lazy-project)").length,(i=toInt(i))<10&&(i=10),i===l||(t="page="+(Math.floor(((n-1)*i+1)/l)+1)+"&pagination="+l,o=uri.urlString+"project.php?"+t,console.log(o,t),goTo(o)),!1})}):console.error("Selector does not exist:",p),!1},$(function(){var e;_adp.projectId=uri.o.param("id"),checkProjectAuthorization(),$("#project-list button").unbind().click(function(){var e;return e=$(this).attr("data-project"),goTo(uri.urlString+"project.php?id="+e)}),$("#project-search").unbind().keyup(function(){return searchProjects.debounce()}),$("paper-radio-button").click(function(){var e;return e=$(this).attr("data-cue"),$("#project-search").attr("placeholder",e),searchProjects.debounce()}),e={swfPath:"bower_components/zeroclipboard/dist/ZeroClipboard.swf"},_adp.zcConfig=e,ZeroClipboard.config(e),_adp.zcClient=new ZeroClipboard($("#copy-ark").get(0)),$("#copy-ark").click(function(){return copyLink(_adp.zcClient)}),checkFileVersion(!1,"js/project.js"),$("#toggle-project-viewport").click(function(){return $(".project-list-page").toggleClass("hidden-xs"),$(".project-search").hasClass("hidden-xs")?$(this).text("Show Project Search"):$(this).text("Show Project List")}),$("#community-map google-map-poly").on("google-map-poly-click",function(e){var t,o;return o=$(this).attr("data-project"),t=uri.urlString+"project.php?id="+o,goTo(t),!1}),$("#community-map").on("google-map-ready",function(){var e,t,o,n,a,r,i,l,s,c,p,d,u,g,h;try{fillSorterWithDropdown()}catch(e){}if(p=p$("#community-map"),null!=_adp.aggregateHulls){for(o=[],i=0,s=(r=Object.toArray(_adp.aggregateHulls)).length;i<s;i++)for(a=r[i],l=0,c=(g=Object.toArray(a)).length;l<c;l++)u=g[l],e=isNull(u.lat)||90===Math.abs(u.lat),t=isNull(u.lng)||180===Math.abs(u.lng),e||t||(d=new Point(u.lat,u.lng),o.push(d));console.info("Adjusting zoom from "+p.zoom),h=getMapZoom(o,"#community-map"),console.info("Calculated new zoom "+h);try{n=getMapCenter(o),p.latitude=n.lat,p.longitude=n.lng,console.info("Recentered map")}catch(e){}p.zoom=h}return!1});try{$(".self-citation").click(function(){return $(this).selectText(),!1})}catch(e){}return restrictProjectsToMapView(),delay(500,function(){var t;try{return paginationBinder()}catch(e){return console.error("Unable to bind events to pagination - "+(t=e).message),console.warn(t.stack),$(".pagination-selection-container").attr("hidden","hidden")}})});
//# sourceMappingURL=project.min.js.map