var checkArkDataset,checkProjectAuthorization,copyLink,createOverflowMenu,disableMapViewFilter,fillSorterWithDropdown,kmlLoader,paginationBinder,postAuthorizeRender,prepParsedDataDownload,publicData,renderEmail,renderMapWithData,renderPublicMap,restrictProjectsToMapView,searchProjects,setPublicData,showCitation,showEmailField,sqlQueryBox,indexOf=[].indexOf||function(a){for(var b=0,c=this.length;b<c;b++)if(b in this&&this[b]===a)return b;return-1};_adp.mapRendered=!1,_adp.zcClient=null,publicData=null;try{(createOverflowMenu=function(){return checkLoggedIn(function(a){var b,c;return b=a.status?'    <paper-item data-href="https://amphibiandisease.org/admin" class="click">\n  <iron-icon icon="icons:settings-applications"></iron-icon>\n  Account Settings\n</paper-item>\n<paper-item data-href="https://amphibiandisease.org/admin-login.php?q=logout" class="click">\n  <span class="glyphicon glyphicon-log-out"></span>\n  Log Out\n</paper-item>':"",c='<paper-menu-button id="header-overflow-menu" vertical-align="bottom" horizontal-offset="-15" horizontal-align="right" vertical-offset="30">\n  <paper-icon-button icon="icons:more-vert" class="dropdown-trigger"></paper-icon-button>\n  <paper-menu class="dropdown-content">\n    '+b+'\n    <paper-item data-href="'+uri.urlString+'dashboard.php" class="click">\n      Summary Dashboard\n    </paper-item>\n    <paper-item data-href="https://amphibian-disease-tracker.readthedocs.org" class="click">\n      <iron-icon icon="icons:chrome-reader-mode"></iron-icon>\n      Documentation\n    </paper-item>\n    <paper-item data-href="https://github.com/AmphibiaWeb/amphibian-disease-tracker" class="click">\n      <iron-icon icon="glyphicon-social:github"></iron-icon>\n      Github\n    </paper-item>\n    <paper-item data-href="https://amphibiandisease.org/about.php" class="click">\n      About / Legal\n    </paper-item>\n  </paper-menu>\n</paper-menu-button>',$("#header-overflow-menu").remove(),$("header#header-bar .logo-container + p").append(c),isNull(b)||$("header#header-bar paper-icon-button[icon='icons:settings-applications']").remove(),bindClicks()}),!1})()}catch(a){}fillSorterWithDropdown=function(a){var b,c,d,e,f,g,h,i,j;null==a&&(a=".sort-by-placeholder-text"),j={date:{title:"sampling date",key:"date"},affiliation:{title:"affiliation",key:"affiliation"},lab:{title:"PI lab",key:"lab"},contact:{title:"PI contact",key:"contact"}},g=$(a).attr("data-order-key"),c="",e=0,i=0;for(f in j)b=j[f],b.key===g&&(i=e),++e,c+='<paper-item data-sort-key="'+b.key+'">'+b.title+"</paper-item>";return d='<paper-dropdown-menu label="Sort Options" id="sort-options">\n  <paper-listbox class="dropdown-content" selected="'+i+'">\n    '+c+"\n  </paper-listbox>\n</paper-dropdown-menu>",$(a).replaceWith(d),h=0,$("#sort-options").on("iron-select",function(){var a,b;return a=p$(this).selectedItem,b=$(a).attr("data-sort-key"),console.debug("Selected '"+b+"'"),h>0&&goTo("https://"+uri.domain+".org/project.php?sort="+b),++h}),!1},checkProjectAuthorization=function(a,b){return null==a&&(a=_adp.projectId),null==b&&(b=postAuthorizeRender),startLoad(),console.info("Checking authorization for "+a),checkLoggedIn(function(c){var d,e;return null==a?(c.status?(console.info("Logged in user, no project"),'<paper-icon-button icon="icons:dashboard" class="authorized-action" id="show-actions" data-href="'+uri.urlString+'admin-page.html" data-toggle="tooltip" title="Administration Dashboard"> </paper-icon-button>'):console.info("Not logged in"),stopLoad(),!1):c.status?(e=uri.urlString+"admin-api.php",d="perform=check_access&project="+a,$.post(e,d,"json").done(function(a){var c;return a.status?(console.info("User is authorized"),c=a.detail.project,"function"==typeof b?b(c,a.detailed_authorization):(console.warn("No callback specified!"),console.info("Got project data",c))):console.info("User is unauthorized")}).fail(function(a,b){return console.log("Error checking server",a,b)}).always(function(){return stopLoad()})):(console.info("Non logged-in user or unauthorized user"),renderPublicMap(),stopLoad(),!1)}),!1},renderEmail=function(a){var b,c;return animateLoad(),c=uri.urlString+"api.php",b="action=is_human&recaptcha_response="+a+"&project="+_adp.projectId,$.post(c,b,"json").done(function(a){var b,c,d,e;return console.info("Checked response"),console.log(a),b=a.author_data,showEmailField(b.contact_email),isNull(null!=(d=a.technical)?d.name:void 0)||isNull(null!=(e=a.technical)?e.email:void 0)||(c="Technical Contact "+a.technical.name,showEmailField(a.technical.email,c,"technical-email-send")),stopLoad()}).fail(function(a,b){return stopLoadError("Sorry, there was a problem getting the contact email"),!1}),!1},showEmailField=function(a,b,c){var d,e,f,g;return null==b&&(b="Contact Email"),null==c&&(c="contact-email-send"),e='<div class="row appended-email-field">\n  <paper-input readonly class="col-xs-8 col-md-11" label="'+b+'" value="'+a+'"></paper-input>\n  <paper-fab icon="communication:email" class="click materialblue" id="'+c+'" data-href="mailto:'+a+'" data-toggle="tooltip" title="Send Email"></paper-fab>\n</div>',$("#email-fill").exists()?$("#email-fill").replaceWith(e):(d=$(".appended-email-field"),f=d.length-1,g=$(".appended-email-field").get(f),$(g).after(e)),bindClicks("#"+c),!1},renderMapWithData=function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L;if(null==b&&(b=!1),G=function(){try{if(!isNull(a.transect_file))return kmlLoader(a.transect_file,function(){return console.debug("Loaded KML file successfully")})}catch(a){}},!0===_adp.mapRendered&&!0!==b)return console.warn("Carto: The map was asked to be rendered again, but it has already been rendered!"),G(),!1;if("object"!=typeof(k=a.carto_id))try{i=JSON.parse(deEscape(k))}catch(a){p=a,q=p.message;try{i=JSON.parse(k)}catch(a){if(p=a,k.length>511&&"object"==typeof(j=fixTruncatedJson(k))&&(console.debug("The carto data object was truncated, but rebuilt."),i=j),isNull(i))return console.error("cartoObj must be JSON string or obj, given",k),console.warn("Cleaned obj:",deEscape(k)),console.warn("Told '"+q+"' then",p.message),stopLoadError("Couldn't parse data"),!1}}else i=k;if(_adp.cartoDataParsed=i,D=i.raw_data,isNull(D))return console.warn("No raw data to render"),G(),!1;if(D.hasDataFile&&(t="helpers/",s=D.filePath,-1===s.search(t)&&(s=""+t+s),o="",g=a.dataset_arks.split(","),g.length>0))for(h=s.split("/"),h.pop(),h=h.join("/"),v=0,w=0,y=g.length;w<y;w++)e=g[w],n=e.split("::"),f=n[0],s=h+"/"+n[1],r=0===v?"":"btn-xs download-alt-datafile",H=0===v?"Download Newest Datafile":f+" dataset",u='<button class="btn btn-primary click download-file download-data-file '+r+'" data-href="'+s+'" data-newtab="true" data-toggle="tooltip" title="'+f+' (right-click to copy)" data-ark="'+f+'">\n  <iron-icon icon="editor:insert-chart"></iron-icon>\n  '+H+"\n</button>",o+=u,++v;if(null==o&&(o=""),m=i.table,isNull(m))return console.warn("WARNING: This project has no data associated with it. Not doing map render."),G(),!1;try{try{!1!==i.bounding_polygon.paths.toBool()||isNull(i.bounding_polygon.multibounds)||(i.bounding_polygon.paths=i.bounding_polygon.multibounds[0])}catch(a){}L=null!=(E=i.bounding_polygon.paths)?E:i.bounding_polygon,K=getMapZoom(L,"#transect-viewport"),console.info("Got zoom",K)}catch(a){K=""}for(C=i.bounding_polygon,(isArray(C)||null==(null!=C?C.paths:void 0))&&(C,I=toObject(C),"object"!=typeof I&&(I={}),I.paths=C,isArray(I.paths)||(I.paths=[]),C=I),null==C.fillColor&&(C.fillColor=defaultFillColor),null==C.fillOpacity&&(C.fillOpacity=defaultFillOpacity),A='<google-map-poly closed fill-color="'+C.fillColor+'" fill-opacity="'+C.fillOpacity+'" stroke-weight="1">',J=[],F=C.paths,x=0,z=F.length;x<z;x++)B=F[x],indexOf.call(J,B)<0&&(J.push(B),A+='<google-map-point latitude="'+B.lat+'" longitude="'+B.lng+'"> </google-map-point>');return A+="    </google-map-poly>",l="SELECT genus, specificepithet, diseasetested, diseasedetected, originaltaxa, ST_asGeoJSON(the_geom) FROM "+m+";",console.info("Would ping cartodb with",l),c=encodeURIComponent(encode64(l)),d="action=fetch&sql_query="+c,console.debug("Hitting endpoint for carto lookup",uri.urlString+"api.php?"+d),$.post("api.php",d,"json").done(function(b){var c,d,f,g,h,i,j,k,l,m,n,q,r,s,t,w,x,y,z,B,D,E,F,H,J,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z;if(!0===_adp.mapRendered)return console.warn("Duplicate map render! Skipping thread"),G(),!1;if(console.info("Carto query got result:",b),!b.status)return j=null!=(P=b.human_error)?P:b.error,null==j&&(j="Unknown error"),stopLoadError("Sorry, we couldn't retrieve your information at the moment ("+j+")"),G(),!1;T=b.parsed_responses[0].rows,N=[],M=[],console.log("Running swapped cartoDB order (lng, lat)"),L={};for(m in T){S=T[m],k=JSON.parse(S.st_asgeojson),n=k.coordinates[1],w=k.coordinates[0],N.push([n,w]);try{M.push(canonicalizePoint([n,w]))}catch(a){}W=S.genus+" "+S.specificepithet,null==L[W]&&(L[W]={positive:!1,negative:!1,no_confidence:!1,counts:{total:0,positive:0,negative:0,no_confidence:0}}),S.diseasedetected=function(){switch((""+S.diseasedetected).toLowerCase()){case"true":return L[W].positive=!0,L[W].counts.positive++,"positive";case"false":return L[W].negative=!0,L[W].counts.negative++,"negative";default:return L[W].no_confidence=!0,L[W].counts.no_confidence++,""+S.diseasedetected}}(),L[W].counts.total++,F="",W!==S.originaltaxa&&(F="(<em>"+S.originaltaxa+"</em>)"),z='<google-map-marker latitude="'+n+'" longitude="'+w+'" data-disease-detected="'+S.diseasedetected+'">\n  <p>\n    <em>'+S.genus+" "+S.specificepithet+"</em> "+F+"\n    <br/>\n    Tested <strong>"+S.diseasedetected+"</strong> for "+S.diseasetested+"\n  </p>\n</google-map-marker>","positive"!==S.diseasedetected&&"negative"!==S.diseasedetected&&(S.diseasedetected="inconclusive"),$(".aweb-link-species[data-species='"+S.genus+" "+S.specificepithet+"']").attr("data-"+S.diseasedetected,"true"),A+=z}if(null==(null!=C?C.paths:void 0))try{_adp.canonicalHull=createConvexHull(N,!0)}catch(a){}for(l='<google-map id="transect-viewport" latitude="'+a.lat+'" longitude="'+a.lng+'" map-type="hybrid" zoom="'+K+'" class="col-xs-12 col-md-9 col-lg-6" api-key="'+gMapsApiKey+'">\n  '+A+"\n</google-map>",D="",E=a.sampling_months.split(","),v=0,x=0,q=E.length;x<q;x++)B=E[x],++v,v>1&&v===E.length?(E.length>2&&(D+=","),D+=" and "):v>1&&(D+=", "),isNumber(B)&&(B=dateMonthToString(B)),D+=B;for(v=0,Y="",Z=a.sampling_years.split(","),v=0,H=0,r=Z.length;H<r;H++)X=Z[H],++v,v>1&&v===Z.length?(Z.length>2&&(Y+=","),Y+=" and "):v>1&&(Y+=", "),Y+=X;if(Y=1===Z.length?"the year "+Y:"the years "+Y,g=new Date(toInt(a.sampled_collection_start)),h=new Date(toInt(a.sampled_collection_end)),d=dateMonthToString(g.getMonth())+" "+g.getFullYear()+" &#8212; "+dateMonthToString(h.getMonth())+" "+h.getFullYear(),y='<div class="row">\n  <h2 class="col-xs-12">Mapping Data</h2>\n  '+l+'\n  <div class="col-xs-12 col-md-3 col-lg-6">\n    <p class="text-muted"><span class="glyphicon glyphicon-calendar"></span> Data were taken from '+d+'</p>\n    <p class="text-muted"><span class="glyphicon glyphicon-calendar"></span> Data were taken in '+D+'</p>\n    <p class="text-muted"><span class="glyphicon glyphicon-calendar"></span> Data were sampled in '+Y+'</p>\n    <p class="text-muted"><iron-icon icon="icons:language"></iron-icon> The effective project center is at ('+roundNumberSigfig(a.lat,6)+", "+roundNumberSigfig(a.lng,6)+") with a sample radius of "+a.radius+"m and a resulting locality <strong class='locality'>"+a.locality+'</strong></p>\n    <p class="text-muted"><iron-icon icon="editor:insert-chart"></iron-icon> The dataset contains '+a.disease_positive+" positive samples ("+roundNumber(100*a.disease_positive/a.disease_samples)+"%), "+a.disease_negative+" negative samples ("+roundNumber(100*a.disease_negative/a.disease_samples)+"%), and "+a.disease_no_confidence+" inconclusive samples ("+roundNumber(100*a.disease_no_confidence/a.disease_samples)+'%)</p>\n    <div class="download-buttons" id="data-download-buttons">\n      '+o+"\n    </div>\n  </div>\n</div>",y=y.replace(/NaN/gm,"0"),!0!==_adp.mapRendered&&($("#auth-block").append(y),setupMapMarkerToggles(),_adp.mapRendered=!0,!isNull(_adp.pageSpeciesList))){for(console.log("Creating CSV downloader for species list"),f=new Date,J={create:!0,downloadFile:"species-list-"+a.project_id+"-"+f.toISOString()+".csv",selector:".download-buttons",buttonText:"Download Species Stats",splitValues:" ",header:["Genus","Species","Subspecies","Positive Samples?","Negative Samples?","Inconclusive Samples?","Positive Count","Negative Count","Inconclusive Count","Totals"]},c=[],Q=_adp.pageSpeciesList,O=0,s=Q.length;O<s;O++){if(U=Q[O],I=U.split(J.splitValues),I.length<3)for(;I.length<3;)I.push("");null!=L[U]?(I.push(""+L[U].positive),I.push(""+L[U].negative),I.push(""+L[U].no_confidence),I.push(""+L[U].counts.positive),I.push(""+L[U].counts.negative),I.push(""+L[U].counts.no_confidence),I.push(""+L[U].counts.total)):(console.warn("CSV downloader couldn't find "+U+" in perTaxaStatus"),window.perTaxaStatus=L),c.push(I.join(J.splitValues))}downloadCSVFile(c,J)}for(bindClicks(".download-file"),sqlQueryBox(),$(".download-data-file").contextmenu(function(a){var b,c,d,f,g,h;return a.preventDefault(),console.log("Event details",a),$(this).offset(),u='<paper-material class="ark-context-wrapper" style="top:'+a.pageY+"px;left:"+a.pageX+'px;position:absolute">\n  <paper-menu class=context-menu">\n    <paper-item class="copy-ark-context">\n      Copy ARK to clipboard\n    </paper-item>\n  </paper-menu>\n</paper-material>',$(".ark-context-wrapper").remove(),$("body").append(u),getMapZoom(M,"#transect-viewport"),ZeroClipboard.config(_adp.zcConfig),h=new ZeroClipboard($(".copy-ark-context").get(0)),e=$(this).attr("data-ark"),g="http://biscicol.org/id/"+e,b={dataType:"text/plain",data:g,"text/plain":g},h.setData(b),h.on("aftercopy",function(a){return a.data["text/plain"]?toastStatusMessage("ARK resolver path copied to clipboard"):(console.error("ZeroClipboard had an error - ",a),console.warn(b),toastStatusMessage("Error copying to clipboard"))}),h.on("error",function(a){var b;return console.error("Initial error"),b=new ZeroClipboard($(".copy-ark-context").get(0)),c(b)}),c=function(a,d){var e;null==a&&(a=h),null==d&&(d=null);try{return e=new ClipboardEvent("copy",b),document.dispatchEvent(e),toastStatusMessage("ARK resolver path copied to clipboard"),!1}catch(a){p=a,console.error("Error creating copy: "+p.message),console.warn(p.stack),console.warn("Can't use HTML5")}return a.setData(b),isNull(d)||d.setData(b),a.on("aftercopy",function(a){return a.data["text/plain"]?toastStatusMessage("ARK resolver path copied to clipboard"):(console.error("ZeroClipboard had an error - ",a),console.warn(b),toastStatusMessage("Error copying to clipboard"))}),a.on("error",function(b){if(console.error("Error copying to clipboard"),console.warn("Got",b),"flash-overdue"===b.name){if(!0===_adp.resetClipboard)return console.error("Resetting ZeroClipboard didn't work!"),!1;ZeroClipboard.on("ready",function(){return _adp.resetClipboard=!0,a=new ZeroClipboard($(".copy-ark-context").get(0)),c(a)})}if("flash-disabled"===b.name)return console.info("No flash on this system"),ZeroClipboard.destroy(),toastStatusMessage("Clipboard copying isn't available on your system")})},d=function(a){return $(this).addClass("iron-selected"),!1},f=function(a){return $(this).removeClass("iron-selected"),!1},this,$(".ark-context-wrapper paper-item").hover(d,f).click(function(){return _adp.resetClipboard=!1,$(".ark-context-wrapper").remove(),!1}).contextmenu(function(){return $(".ark-context-wrapper").remove(),!1}),!1}),checkArkDataset(a),setPublicData(a),R=$(".aweb-link-species"),V=0,t=R.length;V<t;V++)i=R[V],$(i).attr("data-positive").toBool()&&$(i).attr("data-negative","false").attr("data-inconclusive","false");return console.info("Carto lookup complete"),G(),stopLoad()}).fail(function(a,b){return console.error("Couldn't render map and carto data"),console.error(a,b),G(),stopLoadError("Couldn't render map")}),!1},postAuthorizeRender=function(a,b){var c,d,e,f,g,h,i,j;a.public&&console.info("Project is already public, not rerendering"),startLoad(),console.info("Should render stuff",a),h="",b.can_edit&&(h='<paper-icon-button icon="icons:create" class="authorized-action" data-href="'+uri.urlString+"admin-page.html?id="+a.project_id+'" data-toggle="tooltip" title="Edit Project"></paper-icon-button>'),uri.urlString,$("#title").append(h),c=JSON.parse(a.author_data),showEmailField(c.contact_email);try{isNull(a.technical_contact)||isNull(a.technical_contact_email)||(j="Technical Contact "+a.technical_contact,showEmailField(a.technical_contact_email,j,"technical-email-send"))}catch(a){}if(bindClicks(".authorized-action"),"object"!=typeof(f=a.carto_id))try{d=JSON.parse(deEscape(f))}catch(a){g=a,i=g.message;try{d=JSON.parse(f)}catch(a){if(g=a,f.length>511&&"object"==typeof(e=fixTruncatedJson(f))&&(console.debug("The carto data object was truncated, but rebuilt."),d=e),isNull(d))return console.error("cartoObj must be JSON string or obj, given",f),console.warn("Cleaned obj:",deEscape(f)),console.warn("Told '"+i+"' then",g.message),stopLoadError("Couldn't parse data"),!1}}else d=f;renderMapWithData(a);try{prepParsedDataDownload(a)}catch(a){}return!1},kmlLoader=function(a,b){var c,d,e,f,g;try{if("object"==typeof a)e=a,a=e.path;else try{e=JSON.parse(a),a=e.path}catch(b){e={path:a}}console.debug("Loading KML file",a)}catch(a){}if(geo.inhibitKMLInit=!0,d=isNull("undefined"!=typeof _adp&&null!==_adp&&null!=(g=_adp.lastMod)?g.kml:void 0)?"js/kml.min.js":"js/kml.min.js?t="+_adp.lastMod.kml,startLoad(),!$("google-map").exists()){if(c='<google-map id="transect-viewport" class="col-xs-12 col-md-9 col-lg-6 kml-lazy-map" api-key="'+gMapsApiKey+'" map-type="hybrid">\n</google-map>',f='<div class="row">\n  <h2 class="col-xs-12">Mapping Data</h2>\n  '+c+"\n</div>",!$("#auth-block").exists())return console.warn("Couldn't find an authorization block to render the KML map in!"),!1;$("#auth-block").append(f),_adp.mapRendered=!0}return loadJS(d,function(){return initializeParser(null,function(){return loadKML(a,function(){var c,d;try{if(d=geo.kml.parser.docsByUrl[a],isNull(d)&&(a="/"+a,d=geo.kml.parser.docsByUrl[a],isNull(d)&&(console.warn("Could not resolve KML by url, using first doc"),d=geo.kml.parser.docs[0])),isNull(d))return allError("Bad KML provided"),!1;console.debug("Using parsed data from path '"+a+"'",d),"function"==typeof b?b(d):console.info("kmlHandler wasn't given a callback function"),stopLoad()}catch(a){c=a,allError("There was a importing the data from this KML file"),console.warn(c.message),console.warn(c.stack)}return!1}),!1}),!1}),!1},copyLink=function(a,b,c){var d,e,f,g,h;if(null==a&&(a=_adp.zcClient),null==c&&(c=!0),d=p$(".ark-identifier").value,c)try{return h="http://biscicol.org/id/"+d,f={dataType:"text/plain",data:h,"text/plain":h},e=new ClipboardEvent("copy",f),document.dispatchEvent(e),toastStatusMessage("ARK resolver path copied to clipboard"),!1}catch(a){g=a,console.error("Error creating copy: "+g.message),console.warn(g.stack)}return console.warn("Can't use HTML5"),null!=a?(a.setData(f),null!=b&&b.setData(f),a.on("aftercopy",function(a){return a.data["text/plain"]?toastStatusMessage("ARK resolver path copied to clipboard"):toastStatusMessage("Error copying to clipboard")}),a.on("error",function(a){if(console.error("Error copying to clipboard"),console.warn("Got",a),"flash-overdue"===a.name){if(!0===_adp.resetClipboard)return console.error("Resetting ZeroClipboard didn't work!"),!1;ZeroClipboard.on("ready",function(){return _adp.resetClipboard=!0,copyLink()}),_adp.zcClient=new ZeroClipboard($("#copy-ark").get(0))}if("flash-disabled"===a.name)return console.info("No flash on this system"),ZeroClipboard.destroy(),$("#copy-ark").tooltip("destroy").remove(),$(".ark-identifier").removeClass("col-xs-9 col-md-11").addClass("col-xs-12"),toastStatusMessage("Clipboard copying isn't available on your system")})):console.error("Can't use HTML, and ZeroClipboard wasn't passed"),!1},searchProjects=function(){var a,b,c,d;return d=$("#project-search").val(),isNull(d)?($("google-map-poly").removeAttr("hidden"),!1):(c=p$("#search-filter").selectedItem,b=$(c).attr("data-cols"),console.info("Searching on "+d+" ... in "+b),a="action=search_project&q="+d+"&cols="+b,$.post(uri.urlString+"api.php",a,"json").done(function(a){var b,c,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v;if(console.info(a),e="",u=[],k=40,b=768,b<(p=$(window).width())&&p<1050?k=20:$(window).width()<1280&&(k=30),n=Object.toArray(a.result),n.length>0)for(g=0,i=n.length;g<i;g++)l=n[g],u.push(l.project_id),o=l.public.toBool(),f=o?'<iron-icon icon="social:public"></iron-icon>':'<iron-icon icon="icons:lock"></iron-icon>',t=l.project_title.slice(0,k),l.project_title!==t?(v=l.project_title,t+="..."):v="Project #"+l.project_id.slice(0,8)+"...",c='<button class="btn btn-info search-proj-link" data-href="'+uri.urlString+"project.php?id="+l.project_id+'" data-toggle="tooltip" data-placement="top" title="'+v+'">\n  '+f+" "+t+"\n</button>",e+="<li class='project-search-result'>"+c+"</li>";else s=null!=(q=a.search)?q:d,e='<p><em>No results found for "<strong>'+s+'</strong>"';for($("#project-result-container").html(e),bindClicks(".search-proj-link"),$("google-map-poly").attr("hidden","hidden"),r=[],h=0,j=u.length;h<j;h++)m=u[h],r.push($("google-map-poly[data-project='"+m+"']").removeAttr("hidden"));return r}).fail(function(a,b){return console.error(a,b)}),!1)},setPublicData=function(a){return publicData=a,!1},renderPublicMap=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r;null==a&&(a=publicData);try{if(a.public.toBool())return console.info("Not rendering low-data public map for public project"),!1}catch(b){return console.error("Invalid project data passed!"),console.warn(a),!1}try{console.info("Working with limited data",a),b=a.carto_id,n=b.bounding_polygon,null==n.fillColor&&(n.fillColor="#ff7800"),null==n.fillOpacity&&(n.fillOpacity=.35),i='<google-map-poly closed fill-color="'+n.fillColor+'" fill-opacity="'+n.fillOpacity+'" stroke-weight="1">',q=[],c=getPointsFromBoundingBox(a),null==c[0].lat&&(c=getCorners(c)),k={lat:c[0].lat,lng:c[0].lng},j={lat:c[1].lat,lng:c[1].lng},o={lat:c[2].lat,lng:c[2].lng},p={lat:c[3].lat,lng:c[3].lng},l=[k,j,o,p];try{r=getMapZoom(c,"#transect-viewport"),console.info("Got public zoom",r)}catch(a){r=""}for(f=0,g=l.length;f<g;f++)m=l[f],indexOf.call(q,m)<0&&(q.push(m),i+='<google-map-point latitude="'+m.lat+'" longitude="'+m.lng+'"> </google-map-point>');i+="    </google-map-poly>",h=getMapCenter(c),e='<div class="row" id="public-map">\n  <h2 class="col-xs-12">Project Area of Interest</h2>\n  <google-map id="transect-viewport" latitude="'+h.lat+'" longitude="'+h.lng+'" map-type="hybrid" zoom="'+r+'" class="col-xs-12 col-md-9 col-lg-6 center-block clearfix public-fuzzy-map"  api-key="'+gMapsApiKey+'">\n        '+i+"\n  </google-map>\n</div>",$("#auth-block").append(e);try{return r=getMapZoom(l,"#transect-viewport"),p$("#transect-viewport").zoom=r}catch(a){a;try{return r=getMapZoom(c,"#transect-viewport"),p$("#transect-viewport").zoom=r}catch(a){}}}catch(a){return d=a,stopLoadError("Couldn't render map"),console.error("Map rendering error - "+d.message),console.warn(d.stack)}},checkArkDataset=function(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u;if(null==b&&(b=!1),null==c&&(c=!1),"undefined"!=typeof _adp&&null!==_adp||(window._adp={}),l=uri.o.attr("fragment"),k=l.split(","),c||null==_adp.fragmentData){for(console.info("Examining fragment list"),h={},m=0,o=k.length;m<o;m++)d=k[m],r=d.split(":"),h[r[0]]=r[1];_adp.fragmentData=h}if(null==(j=null!=(s=_adp.fragmentData)?s.dataset:void 0))return!1;for(console.info("Checking  ARK identifiers for dataset "+j+" ..."),f=a.dataset_arks.split(","),g="",q=!1,n=0,p=f.length;n<p;n++)if(e=f[n],-1!==e.search(j)){g=e,q=!0;break}return!0!==q?(console.warn("Could not find matching dataset in",f),!1):(h=g.split("::"),i=h[1],console.info("Got matching identifier "+g+" -> "+i),t=".download-file[data-href*='"+i+"']",t=$(t).get(0),b?(u=$(t).attr("data-href"),openTab(u)):($(t).removeClass("btn-xs btn-primary").addClass("btn-success success-glow").click(function(){return $(this).removeClass("success-glow")}),{behavior:"smooth",block:"start"},$(t).get(0).scrollIntoView(!1)),t)},prepParsedDataDownload=function(a){var b,c,d,e,f,g,h,i,j,k,l;if(i=new Date,l={selector:"#data-download-buttons",create:!0,objectAsValues:!0,buttonText:"Download Parsed Dataset",downloadFile:"datalist-"+a.project_id+"-"+i.toISOString()+".csv"},{},"object"!=typeof(f=a.carto_id))try{d=JSON.parse(deEscape(f))}catch(a){j=a,k=j.message;try{d=JSON.parse(f)}catch(a){if(j=a,f.length>511&&"object"==typeof(e=fixTruncatedJson(f))&&(console.debug("The carto data object was truncated, but rebuilt."),d=e),isNull(d))return console.error("cartoObj must be JSON string or obj, given",f),console.warn("Cleaned obj:",deEscape(f)),console.warn("Told '"+k+"' then",j.message),stopLoadError("Couldn't parse data"),!1}}else d=f;return h=d.table,isNull(h)?(console.warn("WARNING: This project has no data associated with it. Not creating download."),!1):(g="SELECT *, ST_asGeoJSON(the_geom) FROM "+h+";",console.info("Would ping cartodb with",g),b=encodeURIComponent(encode64(g)),c="action=fetch&sql_query="+b,_adp.dataPoints=[],$.post("api.php",c,"json").done(function(a){var b,c,d,e,f,g,h,i,j,k,m,n,o,p;if(!a.status)return f=null!=(n=a.human_error)?n:a.error,null==f&&(f="Unknown error"),stopLoadError("Sorry, we couldn't retrieve your information at the moment ("+f+")"),!1;p=a.parsed_responses[0].rows,e=[];for(i in p){o=p[i],h=JSON.parse(o.st_asgeojson),j=h.coordinates[1],k=h.coordinates[0],c={lat:j,lng:k},m=canonicalizePoint(c),_adp.dataPoints.push(m),o.decimalLatitude=j,o.decimalLongitude=k,delete o.st_asgeojson;try{try{g=JSON.parse(o.fimsextra)}catch(a){g=o.fimsextra}if("object"==typeof g){for(b in g)d=g[b],o[b]=d;delete o.fimsextra}}catch(a){}delete o.cartodb_id,delete o.id,delete o.the_geom,delete o.the_geom_webmercator,e.push(o)}return downloadCSVFile(e,l)}).fail(function(a,b){return console.error("Couldn't create"),console.error(a,b)}),!1)},sqlQueryBox=function(){var a,b,c,d;return null==_adp.cartoDataParsed?(console.error("CartoDB data not available. Are you logged in?"),!1):(c=function(a){var b;return animateLoad(),console.info("Querying with"),console.log(a),b="action=fetch&sql_query="+post64(a),_adp.currentAsyncJqxhr=$.post("api.php",b,"json").done(function(a){var b,c,d,e,f,g,h,i,j,k,l,m;if(console.log(a),!0!==a.status)return b=null!=(j=null!=(k=a.human_error)?k:a.error)?j:"Unknown error",console.error(b),d=function(){switch(b){case"UNAUTHORIZED_QUERY_TYPE":return a.query_type;default:return c="(no details for error "+a.error+")"}}(),$("#query-immediate-result").text(b+": "+d),$(".do-sql-query").removeAttr("disabled"),stopLoad(),!1;try{i=JSON.parse(a.post_response[0])}catch(a){return a,console.error("Error parsing result"),$("#query-immediate-result").text("Error parsing result from CartoDB"),$(".do-sql-query").removeAttr("disabled"),stopLoad(),!1}if(null!=i.error)return console.error("Error in result: "+i.error),$("#query-immediate-result").text(i.error),$(".do-sql-query").removeAttr("disabled"),stopLoad(),!1;console.log("Using responses",a.parsed_responses),h="",l=a.parsed_responses;for(f in l){m=l[f],g=toInt(f)+1,h+="#"+g+": ";try{e=JSON.stringify(m.rows),h+='<code class="language-json">'+e+"</code>"}catch(a){h+="BAD QUERY"}h+="\n\n"}$("#query-immediate-result").html(h);try{Prism.highlightAll(!0)}catch(a){}return $(".do-sql-query").removeAttr("disabled"),stopLoad(),!1}).error(function(){return $("#query-immediate-result").text("Error executing query"),$(".do-sql-query").removeAttr("disabled"),stopLoadError()}),!1},a=function(a,b){var c,d;return null==b&&(b=!1),c=a.trim(),d=c.replace(/@@/gim,_adp.cartoDataParsed.table),d=d.replace(/!@/gim,"SELECT * FROM "+_adp.cartoDataParsed.table),b||$("#query-input").val(d),d},function(){return!1},function(){return!1},$("#project-sql-query-box").exists()||(b='<div id="project-sql-query-box" class="row">\n  <h2 class="col-xs-12">Raw Project Queries</h2>\n  <textarea class="form-control code col-xs-10 col-xs-offset-1" rows="3" id="query-input" placeholder="SQL Query" aria-describedby="query-cheats"></textarea>\n  <div class="col-xs-12">\n    <label class="text-muted col-xs-2 col-md-1" for="interpreted-query">Real Query:</label>\n    <code class="language-sql col-xs-10 col-md-11" id="interpreted-query">\n    </code>\n  </div>\n  <div class="col-xs-12 col-sm-9">\n    <span class="text-muted" id="query-cheats">Tips: <ol><li>You\'re querying PostgreSQL</li><li>Type <kbd>@@</kbd> as a placeholder for the table name</li><li>Type <kbd>!@</kbd> as a placeholder for <code>SELECT * FROM @@</code></li><li>Multiple queries at once is just fine. They\'re broken at <kbd>);</kbd>, so enclosing your <code>WHERE</code> in parentheses is good enough.</li></ol></span>\n  </div>\n  <div class="col-xs-12 col-sm-3">\n    <button class="btn btn-default do-sql-query pull-right">Execute Query</button>\n  </div>\n  <h3 class="col-xs-12">Result:</h3>\n  <pre class="code col-xs-12" id="query-immediate-result"></pre>\n</div>',$("h2.project-identifier").exists()?$("h2.project-identifier").before(b):$("main").append(b)),d=function(){var b,d;return console.info("Executing query ..."),b=$("#query-input").val(),d=a(b),-1===d.search(_adp.cartoDataParsed.table)?(console.error("Query didn't specify a table!"),toastStatusMessage("You forgot to include the table identifier in your query."),!1):($(".do-sql-query").attr("disabled","disabled"),c(d))},$("#query-input").keyup(function(b){var c;if(13===(b.keyCode?b.keyCode:b.which)){try{b.preventDefault()}catch(a){}d()}else c=a($(this).val(),!0),$("code#interpreted-query").text(c),Prism.highlightElement($("code#interpreted-query")[0],!0);return!1}),$(".do-sql-query").click(function(){return d()}),!1)},showCitation=function(){var a;return a=p$("paper-input[label='DOI']").value,$("#citation-pop").exists()?p$("#citation-pop").open():(animateLoad(),fetchCitation(a,function(a,b){var c,d,e;try{e=isNull(b)?"":'<paper-button class="click" data-newtab="true" data-href="'+b+'">\n  <iron-icon icon="icons:open-in-new"></iron-icon>\n  Open\n</paper-button>',d='<paper-dialog id="citation-pop" modal>\n  <h2>Citation</h2>\n  <paper-dialog-scrollable>\n    <div class="pop-contents">\n      <paper-textarea label="Citation" id="popped-citation" readonly>\n        '+a+'\n      </paper-textarea>\n    </div>\n  </paper-dialog-scrollable>\n  <div class="buttons">\n    <paper-button id="copy-citation" class="click-copy" data-copy-selector="#popped-citation">\n      <iron-icon icon="icons:content-copy"></iron-icon>\n      Copy Citation\n    </paper-button>\n    <paper-button id="copy-doi" class="click-copy" data-copy-selector="#doi-input">\n      <iron-icon icon="icons:content-copy"></iron-icon>\n      Copy DOI\n    </paper-button>\n    '+e+"\n    <paper-button dialog-dismiss>Close</paper-button>\n  </div>\n</paper-dialog>",$("body").append(d);try{p$("#popped-citation").value=a}catch(b){delay(500,function(){try{return p$("#popped-citation").value=a}catch(a){}})}return bindClicks(),bindCopyEvents(),safariDialogHelper("#citation-pop"),stopLoad()}catch(a){c=a,console.error("Couldn't show citation - "+c.message);try{return p$("#citation-pop").open()}catch(a){return stopLoadError("Failed to display citation")}}})),!1},window.showCitation=showCitation,disableMapViewFilter=function(){return $("google-map#community-map").unbind("google-map-idle"),_adp.hasBoundMapEvent=!1,$("nav#project-pagination").removeAttr("hidden"),!0},restrictProjectsToMapView=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I;if(null==a&&(a=!1),!$("google-map#community-map").exists())return!1;if(_adp.hasBoundMapEvent||(_adp.hasBoundMapEvent=!0,c=null,(H=function(a){return $("google-map#community-map").removeAttr("width"),
delay(25,function(){var b;try{b=$("google-map#community-map").width(),$("google-map#community-map").attr("width",b+"px")}catch(a){}try{if("function"==typeof a)return a()}catch(a){}}),!1})(c),$("window").on("resize",function(){return H(function(){return restrictProjectsToMapView.debounce(50,null,null,a)}),!1}),$("google-map#community-map").on("google-map-idle",function(){return H(function(){return restrictProjectsToMapView.debounce(50,null,null,a)}),!1}),$("#projects-by-map-view").on("iron-change",function(){var a,b,c,d;for(d=$(".map-view-control:not(.map-view-master)"),b=0,c=d.length;b<c;b++)a=d[b],p$(a).disabled=!p$(this).checked;return!1}),$(".map-view-control").on("iron-change",function(){return restrictProjectsToMapView.debounce(50,null,null,a),!1}),console.log("Bound events for RPTMV")),!p$("#projects-by-map-view").checked)return $("#project-list li").removeAttr("hidden"),$("h2.status-notice.project-list").removeAttr("hidden"),$("nav#project-pagination").removeAttr("hidden"),$("button.js-lazy-project").remove(),$("#map-view-title").remove(),!1;if($("nav#project-pagination").attr("hidden","hidden"),$("h2.status-notice.project-list").attr("hidden","hidden"),n=p$("google-map#community-map").map,o=n.getBounds(),d={north:o.getNorthEast().lat(),east:o.getNorthEast().lng(),south:o.getSouthWest().lat(),west:o.getSouthWest().lng()},d.west>d.east&&(d.west=-180,d.east=180),I=[],p$("#show-dataless-projects").checked)for(t=$("#project-list button"),g=0,i=t.length;g<i;g++){b=t[g];try{s=$(b).attr("data-project"),$(b).attr("data-has-locale").toBool()?console.debug(s+" has a locale, handling normally"):I.push(s)}catch(a){e=a,console.warn("Error checking button -- "+e.message),console.warn(e.stack)}}for(u=$("google-map#community-map").find("google-map-poly"),h=0,j=u.length;h<j;h++)if(r=u[h],s=$(r).attr("data-project"),!(indexOf.call(I,s)>=0||isNull(s))){try{if($("button[data-project='"+s+"']").exists()&&!0!==$("button[data-project='"+s+"']").attr("data-has-locale").toBool())continue}catch(a){}for(G={north:-90,south:90,east:-180,west:180},y=$(r).find("google-map-point"),m=0,k=y.length;m<k;m++)q=y[m],p$(q).latitude>G.north&&(G.north=p$(q).latitude),p$(q).longitude>G.east&&(G.east=p$(q).longitude),p$(q).longitude<G.west&&(G.west=p$(q).longitude),p$(q).latitude<G.south&&(G.south=p$(q).latitude);f=!1,!0===a?(console.log("Checking edges of",s),d.south<(z=G.north)&&z<d.north&&(f=!0),d.south<(A=G.south)&&A<d.north&&(f=!0),d.west<(B=G.east)&&B<d.east&&(f=!0),d.west<(C=G.west)&&C<d.east&&(f=!0)):(console.log("Checking containement of",s),G.south>d.south&&G.north<d.north&&(d.west<(D=G.east)&&D<d.east||d.west<(E=G.west)&&E<d.east)&&(console.log("Project is wholly NS contained"),f=!0),G.west>d.west&&G.east<d.east&&(d.south<(F=G.north)&&F<d.north||d.south<(v=G.south)&&v<d.north)&&(console.log("Project is wholly EW contained"),f=!0)),f&&I.push(s)}for($("#project-list li").attr("hidden","hidden"),w=$("#project-list button"),p=0,l=w.length;p<l;p++)b=w[p],x=$(b).attr("data-project"),indexOf.call(I,x)>=0&&$(b).parent("li").removeAttr("hidden");return $.get(uri.urlString+"admin-api.php","action=list","json").done(function(a){var b,c,d,e,f,g,h,i,j;console.log("Got project list",a),$("button.js-lazy-project").remove(),e=Object.toArray(a.public_projects),f=a.projects,g=[];for(d in f)i=f[d],indexOf.call(I,d)>=0?$("button[data-project='"+d+"']").exists()?g.push(console.log("Not re-adding button for",d)):(console.log("Should add visible project '"+i+"'",d),h=i.slice(0,40),h!==i?(j=i,h+="..."):j="Project #"+d.slice(0,8)+"...",c=indexOf.call(e,d)>=0?"social:public":"icons:lock",b='<li>\n<button class="js-lazy-project btn btn-primary" data-href="'+uri.urlString+"project.php?id="+d+'" data-project="'+d+'" data-toggle="tooltip" title="'+j+'">\n  <iron-icon icon="'+c+'"></iron-icon>\n  '+h+"\n</button>\n</li>",g.push($("#project-list").append(b))):g.push(console.log("Not adding invalid project",d));return g}).fail(function(a,b){return console.warn("Failed to get project list",a,b)}).always(function(){var a,b;return a=$("#project-list button:visible").length,b='<h2 class="col-xs-12 status-notice hidden-xs project-list project-list-page map-view-title" id="map-view-title">\n  Showing '+a+" projects in view\n</h2>",$("#map-view-title").remove(),$("h2.status-notice.project-list").before(b)}),console.log("Showing projects",I,"within",d),I},paginationBinder=function(){var a,b;return b="paper-dropdown-menu#pagination-selector-dropdown",$(b).exists()?(a=10,delayPolymerBind(b,function(){var c,d,e,f,g,h,i,j,k,l,m;if(p$(b).disabled){for(c=null!=(j=uri.o.param("pagination"))?j:$("#project-list li button:not(.js-lazy-project)").length,c=toInt(c),m=!1,l=0,k=$("paper-dropdown-menu#pagination-selector-dropdown paper-listbox.dropdown-content paper-item"),f=0,g=k.length;f<g;f++){i=k[f];try{h=toInt($(i).text().trim())}catch(b){d=b,h=a}if(h===c){m=!0;break}l++}m||(l=0),p$("paper-dropdown-menu#pagination-selector-dropdown paper-listbox.dropdown-content").selected=l,console.log("Pre-selected item",l)}return p$(b).disabled=!1,$("paper-dropdown-menu#pagination-selector-dropdown paper-listbox.dropdown-content").unbind("iron-select").on("iron-select",function(){return console.log("iron-select fired"),e.debounce(50,null,null,this)}),$("paper-dropdown-menu#pagination-selector-dropdown paper-listbox.dropdown-content paper-item").unbind("click").click(function(){return console.log("paper-item click event fired"),e.debounce(50,null,null,$(this).parent("paper-listbox"))}),e=function(b){var e,f,g,j,k,l,m;i=p$(b).selectedItem;try{h=toInt($(i).text().trim())}catch(b){d=b,console.warn("Unable to read pagination number -- "+d.message),h=a}return console.log("Dropdown selected paginator",h),j=null!=(l=uri.o.param("page"))?l:1,c=null!=(m=uri.o.param("pagination"))?m:$("#project-list li button:not(.js-lazy-project)").length,c=toInt(c),c<a&&(c=a),c!==h&&(k=(j-1)*c+1,g=Math.floor(k/h)+1,e="page="+g+"&pagination="+h,f=uri.urlString+"project.php?"+e,console.log(f,e),goTo(f),!1)},!1}),!1):(console.error("Selector does not exist:",b),!1)},$(function(){var a;_adp.projectId=uri.o.param("id"),checkProjectAuthorization(),$("#project-list button").unbind().click(function(){var a;return a=$(this).attr("data-project"),goTo(uri.urlString+"project.php?id="+a)}),$("#project-search").unbind().keyup(function(){return searchProjects.debounce()}),$("paper-radio-button").click(function(){var a;return a=$(this).attr("data-cue"),$("#project-search").attr("placeholder",a),searchProjects.debounce()}),a={swfPath:"bower_components/zeroclipboard/dist/ZeroClipboard.swf"},_adp.zcConfig=a,ZeroClipboard.config(a),_adp.zcClient=new ZeroClipboard($("#copy-ark").get(0)),$("#copy-ark").click(function(){return copyLink(_adp.zcClient)}),checkFileVersion(!1,"js/project.js"),$("#toggle-project-viewport").click(function(){return $(".project-list-page").toggleClass("hidden-xs"),$(".project-search").hasClass("hidden-xs")?$(this).text("Show Project Search"):$(this).text("Show Project List")}),$("#community-map google-map-poly").on("google-map-poly-click",function(a){var b,c;return c=$(this).attr("data-project"),b=uri.urlString+"project.php?id="+c,goTo(b),!1}),$("#community-map").on("google-map-ready",function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o;try{fillSorterWithDropdown()}catch(a){}if(k=p$("#community-map"),null!=_adp.aggregateHulls){for(c=[],f=Object.toArray(_adp.aggregateHulls),g=0,i=f.length;g<i;g++)for(e=f[g],n=Object.toArray(e),h=0,j=n.length;h<j;h++)m=n[h],a=isNull(m.lat)||90===Math.abs(m.lat),b=isNull(m.lng)||180===Math.abs(m.lng),a||b||(l=new Point(m.lat,m.lng),c.push(l));console.info("Adjusting zoom from "+k.zoom),o=getMapZoom(c,"#community-map"),console.info("Calculated new zoom "+o);try{d=getMapCenter(c),k.latitude=d.lat,k.longitude=d.lng,console.info("Recentered map")}catch(a){}k.zoom=o}return!1});try{$(".self-citation").click(function(){return $(this).selectText(),!1})}catch(a){}return restrictProjectsToMapView(),delay(500,function(){var a;try{return paginationBinder()}catch(b){return a=b,console.error("Unable to bind events to pagination - "+a.message),console.warn(a.stack),$(".pagination-selection-container").attr("hidden","hidden")}})});
//# sourceMappingURL=project.min.js.map